name: Build

on:
  push:
    paths-ignore:
      - '**/*.md'
  pull_request:
    paths-ignore:
      - '**/*.md'
  workflow_dispatch:
    # allows manual trigger

jobs:
  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        builds: [ 'Debug', 'Release' ]
    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'
    - name: Publish
      run: dotnet publish EOS_SDK/EOS_SDK.csproj -c ${{ matrix.builds }} -r linux-x64 -o DLLs -p:Platform=x64
    - name: Upload artifact (Lin)
      uses: actions/upload-artifact@v4
      with:
        name: SDK-Linux-${{ matrix.builds }}
        path: DLLs
        if-no-files-found: error

  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        builds: [ 'Debug', 'Release' ]
        CPU: [ 'x86', 'x64' ]
    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'
    - name: Publish
      run: dotnet publish EOS_SDK/EOS_SDK.csproj -c ${{ matrix.builds }} -r win-${{ matrix.CPU }} -o DLLs -p:Platform=${{ matrix.CPU }}
    - name: Upload artifact (Win)
      uses: actions/upload-artifact@v4
      with:
        name: SDK-Win-${{ matrix.builds }}-${{ matrix.CPU }}
        path: DLLs
        if-no-files-found: error

# Enable MAC for testing
  macos:
    runs-on: macos-latest
    strategy:
      matrix:
        builds: [ 'Debug', 'Release' ]
    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'
    - name: Publish
      run: dotnet publish EOS_SDK/EOS_SDK.csproj -c ${{ matrix.builds }} -r osx-x64 -o DLLs -p:Platform=x64
    - name: Upload artifact (Mac)
      uses: actions/upload-artifact@v4
      with:
        name: SDK-Mac-${{ matrix.builds }}
        path: DLLs
        if-no-files-found: error
