using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

namespace EOS_SDK
{
    public unsafe class Exports
    {
#if true
        #region Exports

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static ulong EOS_Achievements_AddNotifyAchievementsUnlocked(IntPtr handle, IntPtr options, IntPtr clientData, Achievements.OnAchievementsUnlockedCallback notificationFn)
		{
			var _AddNotifyAchievementsUnlockedOptions = Marshal.PtrToStructure<Achievements.AddNotifyAchievementsUnlockedOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static ulong EOS_Achievements_AddNotifyAchievementsUnlockedV2(IntPtr handle, IntPtr options, IntPtr clientData, Achievements.OnAchievementsUnlockedCallbackV2public notificationFn)
		{
			var _AddNotifyAchievementsUnlockedV2Options = Marshal.PtrToStructure<Achievements.AddNotifyAchievementsUnlockedV2Options>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_Achievements_CopyAchievementDefinitionByAchievementId(IntPtr handle, IntPtr options, IntPtr outDefinition)
		{
			var _CopyAchievementDefinitionByAchievementIdOptions = Marshal.PtrToStructure<Achievements.CopyAchievementDefinitionByAchievementIdOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_Achievements_CopyAchievementDefinitionByIndex(IntPtr handle, IntPtr options, IntPtr outDefinition)
		{
			var _CopyAchievementDefinitionByIndexOptions = Marshal.PtrToStructure<Achievements.CopyAchievementDefinitionByIndexOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_Achievements_CopyAchievementDefinitionV2ByAchievementId(IntPtr handle, IntPtr options, IntPtr outDefinition)
		{
			var _CopyAchievementDefinitionV2ByAchievementIdOptions = Marshal.PtrToStructure<Achievements.CopyAchievementDefinitionV2ByAchievementIdOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_Achievements_CopyAchievementDefinitionV2ByIndex(IntPtr handle, IntPtr options, IntPtr outDefinition)
		{
			var _CopyAchievementDefinitionV2ByIndexOptions = Marshal.PtrToStructure<Achievements.CopyAchievementDefinitionV2ByIndexOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_Achievements_CopyPlayerAchievementByAchievementId(IntPtr handle, IntPtr options, IntPtr outAchievement)
		{
			var _CopyPlayerAchievementByAchievementIdOptions = Marshal.PtrToStructure<Achievements.CopyPlayerAchievementByAchievementIdOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_Achievements_CopyPlayerAchievementByIndex(IntPtr handle, IntPtr options, IntPtr outAchievement)
		{
			var _CopyPlayerAchievementByIndexOptions = Marshal.PtrToStructure<Achievements.CopyPlayerAchievementByIndexOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_Achievements_CopyUnlockedAchievementByAchievementId(IntPtr handle, IntPtr options, IntPtr outAchievement)
		{
			var _CopyUnlockedAchievementByAchievementIdOptions = Marshal.PtrToStructure<Achievements.CopyUnlockedAchievementByAchievementIdOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_Achievements_CopyUnlockedAchievementByIndex(IntPtr handle, IntPtr options, IntPtr outAchievement)
		{
			var _CopyUnlockedAchievementByIndexOptions = Marshal.PtrToStructure<Achievements.CopyUnlockedAchievementByIndexOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Achievements_DefinitionV2_Release(IntPtr achievementDefinition)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Achievements_Definition_Release(IntPtr achievementDefinition)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static uint EOS_Achievements_GetAchievementDefinitionCount(IntPtr handle, IntPtr options)
		{
			var _GetAchievementDefinitionCountOptions = Marshal.PtrToStructure<Achievements.GetAchievementDefinitionCountOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static uint EOS_Achievements_GetPlayerAchievementCount(IntPtr handle, IntPtr options)
		{
			var _GetPlayerAchievementCountOptions = Marshal.PtrToStructure<Achievements.GetPlayerAchievementCountOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static uint EOS_Achievements_GetUnlockedAchievementCount(IntPtr handle, IntPtr options)
		{
			var _GetUnlockedAchievementCountOptions = Marshal.PtrToStructure<Achievements.GetUnlockedAchievementCountOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Achievements_PlayerAchievement_Release(IntPtr achievement)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Achievements_QueryDefinitions(IntPtr handle, IntPtr options, IntPtr clientData, Achievements.OnQueryDefinitionsCompleteCallback completionDelegate)
		{
			var _QueryDefinitionsOptions = Marshal.PtrToStructure<Achievements.QueryDefinitionsOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Achievements_QueryPlayerAchievements(IntPtr handle, IntPtr options, IntPtr clientData, Achievements.OnQueryPlayerAchievementsCompleteCallback completionDelegate)
		{
			var _QueryPlayerAchievementsOptions = Marshal.PtrToStructure<Achievements.QueryPlayerAchievementsOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Achievements_RemoveNotifyAchievementsUnlocked(IntPtr handle, ulong inId)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Achievements_UnlockAchievements(IntPtr handle, IntPtr options, IntPtr clientData, Achievements.OnUnlockAchievementsCompleteCallback completionDelegate)
		{
			var _UnlockAchievementsOptions = Marshal.PtrToStructure<Achievements.UnlockAchievementsOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Achievements_UnlockedAchievement_Release(IntPtr achievement)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_ActiveSession_CopyInfo(IntPtr handle, IntPtr options, IntPtr outActiveSessionInfo)
		{
			var _ActiveSessionCopyInfoOptions = Marshal.PtrToStructure<ActiveSessionCopyInfoOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static IntPtr EOS_ActiveSession_GetRegisteredPlayerByIndex(IntPtr handle, IntPtr options)
		{
			var _ActiveSessionGetRegisteredPlayerByIndexOptions = Marshal.PtrToStructure<ActiveSessionGetRegisteredPlayerByIndexOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static uint EOS_ActiveSession_GetRegisteredPlayerCount(IntPtr handle, IntPtr options)
		{
			var _ActiveSessionGetRegisteredPlayerCountOptions = Marshal.PtrToStructure<ActiveSessionGetRegisteredPlayerCountOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_ActiveSession_Info_Release(IntPtr activeSessionInfo)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_ActiveSession_Release(IntPtr activeSessionHandle)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_AntiCheatClient_AddExternalIntegrityCatalog(IntPtr handle, IntPtr options)
		{
			var _AddExternalIntegrityCatalogOptions = Marshal.PtrToStructure<AddExternalIntegrityCatalogOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static ulong EOS_AntiCheatClient_AddNotifyClientIntegrityViolated(IntPtr handle, IntPtr options, IntPtr clientData, AntiCheatClient.OnClientIntegrityViolatedCallback notificationFn)
		{
			var _AddNotifyClientIntegrityViolatedOptions = Marshal.PtrToStructure<AddNotifyClientIntegrityViolatedOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static ulong EOS_AntiCheatClient_AddNotifyMessageToPeer(IntPtr handle, IntPtr options, IntPtr clientData, AntiCheatClient.OnMessageToPeerCallback notificationFn)
		{
			var _AddNotifyMessageToPeerOptions = Marshal.PtrToStructure<AddNotifyMessageToPeerOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static ulong EOS_AntiCheatClient_AddNotifyMessageToServer(IntPtr handle, IntPtr options, IntPtr clientData, AntiCheatClient.OnMessageToServerCallback notificationFn)
		{
			var _AddNotifyMessageToServerOptions = Marshal.PtrToStructure<AddNotifyMessageToServerOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static ulong EOS_AntiCheatClient_AddNotifyPeerActionRequired(IntPtr handle, IntPtr options, IntPtr clientData, AntiCheatClient.OnPeerActionRequiredCallback notificationFn)
		{
			var _AddNotifyPeerActionRequiredOptions = Marshal.PtrToStructure<AddNotifyPeerActionRequiredOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static ulong EOS_AntiCheatClient_AddNotifyPeerAuthStatusChanged(IntPtr handle, IntPtr options, IntPtr clientData, AntiCheatClient.OnPeerAuthStatusChangedCallback notificationFn)
		{
			var _AddNotifyPeerAuthStatusChangedOptions = Marshal.PtrToStructure<AddNotifyPeerAuthStatusChangedOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_AntiCheatClient_BeginSession(IntPtr handle, IntPtr options)
		{
			var _BeginSessionOptions = Marshal.PtrToStructure<BeginSessionOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_AntiCheatClient_EndSession(IntPtr handle, IntPtr options)
		{
			var _EndSessionOptions = Marshal.PtrToStructure<EndSessionOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_AntiCheatClient_GetProtectMessageOutputLength(IntPtr handle, IntPtr options, ref uint outBufferSizeBytes)
        {
            var _GetProtectMessageOutputLengthOptions = Marshal.PtrToStructure<GetProtectMessageOutputLengthOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_AntiCheatClient_PollStatus(IntPtr handle, IntPtr options, ref AntiCheatClient.AntiCheatClientViolationType outViolationType, IntPtr outMessage)
        {
            var _PollStatusOptions = Marshal.PtrToStructure<PollStatusOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_AntiCheatClient_PollStatus(IntPtr handle, IntPtr options, ref AntiCheatClient.AntiCheatClientViolationType outViolationType, IntPtr outMessage)
		{
			var _AntiCheatClientViolationType = Marshal.PtrToStructure<AntiCheatClientViolationType>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_AntiCheatClient_ProtectMessage(IntPtr handle, IntPtr options, IntPtr outBuffer, ref uint outBytesWritten)
        {
            var _ProtectMessageOptions = Marshal.PtrToStructure<ProtectMessageOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_AntiCheatClient_ReceiveMessageFromPeer(IntPtr handle, IntPtr options)
		{
			var _ReceiveMessageFromPeerOptions = Marshal.PtrToStructure<ReceiveMessageFromPeerOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_AntiCheatClient_ReceiveMessageFromServer(IntPtr handle, IntPtr options)
		{
			var _ReceiveMessageFromServerOptions = Marshal.PtrToStructure<ReceiveMessageFromServerOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_AntiCheatClient_RegisterPeer(IntPtr handle, IntPtr options)
		{
			var _RegisterPeerOptions = Marshal.PtrToStructure<RegisterPeerOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_AntiCheatClient_RemoveNotifyClientIntegrityViolated(IntPtr handle, ulong notificationId)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_AntiCheatClient_RemoveNotifyMessageToPeer(IntPtr handle, ulong notificationId)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_AntiCheatClient_RemoveNotifyMessageToServer(IntPtr handle, ulong notificationId)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_AntiCheatClient_RemoveNotifyPeerActionRequired(IntPtr handle, ulong notificationId)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_AntiCheatClient_RemoveNotifyPeerAuthStatusChanged(IntPtr handle, ulong notificationId)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_AntiCheatClient_UnprotectMessage(IntPtr handle, IntPtr options, IntPtr outBuffer, [Out] uint outBytesWritten)
        {
            var _UnprotectMessageOptions = Marshal.PtrToStructure<UnprotectMessageOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_AntiCheatClient_UnregisterPeer(IntPtr handle, IntPtr options)
		{
			var _UnregisterPeerOptions = Marshal.PtrToStructure<UnregisterPeerOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static ulong EOS_AntiCheatServer_AddNotifyClientActionRequired(IntPtr handle, IntPtr options, IntPtr clientData, AntiCheatServer.OnClientActionRequiredCallback notificationFn)
		{
			var _AddNotifyClientActionRequiredOptions = Marshal.PtrToStructure<AddNotifyClientActionRequiredOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static ulong EOS_AntiCheatServer_AddNotifyClientAuthStatusChanged(IntPtr handle, IntPtr options, IntPtr clientData, AntiCheatServer.OnClientAuthStatusChangedCallback notificationFn)
		{
			var _AddNotifyClientAuthStatusChangedOptions = Marshal.PtrToStructure<AddNotifyClientAuthStatusChangedOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static ulong EOS_AntiCheatServer_AddNotifyMessageToClient(IntPtr handle, IntPtr options, IntPtr clientData, AntiCheatServer.OnMessageToClientCallback notificationFn)
		{
			var _AddNotifyMessageToClientOptions = Marshal.PtrToStructure<AddNotifyMessageToClientOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_AntiCheatServer_BeginSession(IntPtr handle, IntPtr options)
		{
			var _BeginSessionOptions = Marshal.PtrToStructure<BeginSessionOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_AntiCheatServer_EndSession(IntPtr handle, IntPtr options)
		{
			var _EndSessionOptions = Marshal.PtrToStructure<EndSessionOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_AntiCheatServer_GetProtectMessageOutputLength(IntPtr handle, IntPtr options, [Out] uint outBufferSizeBytes)
		{
			var _GetProtectMessageOutputLengthOptions = Marshal.PtrToStructure<GetProtectMessageOutputLengthOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_AntiCheatServer_LogEvent(IntPtr handle, IntPtr options)
		{
			var _LogEventOptions = Marshal.PtrToStructure<LogEventOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_AntiCheatServer_LogGameRoundEnd(IntPtr handle, IntPtr options)
		{
			var _LogGameRoundEndOptions = Marshal.PtrToStructure<LogGameRoundEndOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_AntiCheatServer_LogGameRoundStart(IntPtr handle, IntPtr options)
		{
			var _LogGameRoundStartOptions = Marshal.PtrToStructure<LogGameRoundStartOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_AntiCheatServer_LogPlayerDespawn(IntPtr handle, IntPtr options)
		{
			var _LogPlayerDespawnOptions = Marshal.PtrToStructure<LogPlayerDespawnOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_AntiCheatServer_LogPlayerRevive(IntPtr handle, IntPtr options)
		{
			var _LogPlayerReviveOptions = Marshal.PtrToStructure<LogPlayerReviveOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_AntiCheatServer_LogPlayerSpawn(IntPtr handle, IntPtr options)
		{
			var _LogPlayerSpawnOptions = Marshal.PtrToStructure<LogPlayerSpawnOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_AntiCheatServer_LogPlayerTakeDamage(IntPtr handle, IntPtr options)
		{
			var _LogPlayerTakeDamageOptions = Marshal.PtrToStructure<LogPlayerTakeDamageOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_AntiCheatServer_LogPlayerTick(IntPtr handle, IntPtr options)
		{
			var _LogPlayerTickOptions = Marshal.PtrToStructure<LogPlayerTickOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_AntiCheatServer_LogPlayerUseAbility(IntPtr handle, IntPtr options)
		{
			var _LogPlayerUseAbilityOptions = Marshal.PtrToStructure<LogPlayerUseAbilityOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_AntiCheatServer_LogPlayerUseWeapon(IntPtr handle, IntPtr options)
		{
			var _LogPlayerUseWeaponOptions = Marshal.PtrToStructure<LogPlayerUseWeaponOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_AntiCheatServer_ProtectMessage(IntPtr handle, IntPtr options, IntPtr outBuffer, [Out] uint outBytesWritten)
		{
			var _ProtectMessageOptions = Marshal.PtrToStructure<ProtectMessageOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_AntiCheatServer_ReceiveMessageFromClient(IntPtr handle, IntPtr options)
		{
			var _ReceiveMessageFromClientOptions = Marshal.PtrToStructure<ReceiveMessageFromClientOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_AntiCheatServer_RegisterClient(IntPtr handle, IntPtr options)
		{
			var _RegisterClientOptions = Marshal.PtrToStructure<RegisterClientOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_AntiCheatServer_RegisterEvent(IntPtr handle, IntPtr options)
		{
			var _RegisterEventOptions = Marshal.PtrToStructure<RegisterEventOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_AntiCheatServer_RemoveNotifyClientActionRequired(IntPtr handle, ulong notificationId)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_AntiCheatServer_RemoveNotifyClientAuthStatusChanged(IntPtr handle, ulong notificationId)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_AntiCheatServer_RemoveNotifyMessageToClient(IntPtr handle, ulong notificationId)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_AntiCheatServer_SetClientDetails(IntPtr handle, IntPtr options)
		{
			var _SetClientDetailsOptions = Marshal.PtrToStructure<SetClientDetailsOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_AntiCheatServer_SetClientNetworkState(IntPtr handle, IntPtr options)
		{
			var _SetClientNetworkStateOptions = Marshal.PtrToStructure<SetClientNetworkStateOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_AntiCheatServer_SetGameSessionId(IntPtr handle, IntPtr options)
		{
			var _SetGameSessionIdOptions = Marshal.PtrToStructure<SetGameSessionIdOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_AntiCheatServer_UnprotectMessage(IntPtr handle, IntPtr options, IntPtr outBuffer, [Out] uint outBytesWritten)
		{
			var _UnprotectMessageOptions = Marshal.PtrToStructure<UnprotectMessageOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_AntiCheatServer_UnregisterClient(IntPtr handle, IntPtr options)
		{
			var _UnregisterClientOptions = Marshal.PtrToStructure<UnregisterClientOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static ulong EOS_Auth_AddNotifyLoginStatusChanged(IntPtr handle, IntPtr options, IntPtr clientData, Auth.OnLoginStatusChangedCallback notification)
		{
			var _AddNotifyLoginStatusChangedOptions = Marshal.PtrToStructure<AddNotifyLoginStatusChangedOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_Auth_CopyIdToken(IntPtr handle, IntPtr options, IntPtr outIdToken)
		{
			var _CopyIdTokenOptions = Marshal.PtrToStructure<CopyIdTokenOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_Auth_CopyUserAuthToken(IntPtr handle, IntPtr options, IntPtr localUserId, IntPtr outUserAuthToken)
		{
			var _CopyUserAuthTokenOptions = Marshal.PtrToStructure<CopyUserAuthTokenOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Auth_DeletePersistentAuth(IntPtr handle, IntPtr options, IntPtr clientData, Auth.OnDeletePersistentAuthCallback completionDelegate)
		{
			var _DeletePersistentAuthOptions = Marshal.PtrToStructure<DeletePersistentAuthOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static IntPtr EOS_Auth_GetLoggedInAccountByIndex(IntPtr handle, int index)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static int EOS_Auth_GetLoggedInAccountsCount(IntPtr handle)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static LoginStatus EOS_Auth_GetLoginStatus(IntPtr handle, IntPtr localUserId)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static IntPtr EOS_Auth_GetMergedAccountByIndex(IntPtr handle, IntPtr localUserId, uint index)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static uint EOS_Auth_GetMergedAccountsCount(IntPtr handle, IntPtr localUserId)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_Auth_GetSelectedAccountId(IntPtr handle, IntPtr localUserId, IntPtr outSelectedAccountId)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Auth_IdToken_Release(IntPtr idToken)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Auth_LinkAccount(IntPtr handle, IntPtr options, IntPtr clientData, Auth.OnLinkAccountCallback completionDelegate)
		{
			var _LinkAccountOptions = Marshal.PtrToStructure<LinkAccountOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Auth_Login(IntPtr handle, IntPtr options, IntPtr clientData, Auth.OnLoginCallback completionDelegate)
		{
			var _LoginOptions = Marshal.PtrToStructure<LoginOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Auth_Logout(IntPtr handle, IntPtr options, IntPtr clientData, Auth.OnLogoutCallback completionDelegate)
		{
			var _LogoutOptions = Marshal.PtrToStructure<LogoutOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Auth_QueryIdToken(IntPtr handle, IntPtr options, IntPtr clientData, Auth.OnQueryIdTokenCallback completionDelegate)
		{
			var _QueryIdTokenOptions = Marshal.PtrToStructure<QueryIdTokenOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Auth_RemoveNotifyLoginStatusChanged(IntPtr handle, ulong inId)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Auth_Token_Release(IntPtr authToken)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Auth_VerifyIdToken(IntPtr handle, IntPtr options, IntPtr clientData, Auth.OnVerifyIdTokenCallback completionDelegate)
		{
			var _VerifyIdTokenOptions = Marshal.PtrToStructure<VerifyIdTokenOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Auth_VerifyUserAuth(IntPtr handle, IntPtr options, IntPtr clientData, Auth.OnVerifyUserAuthCallback completionDelegate)
		{
			var _VerifyUserAuthOptions = Marshal.PtrToStructure<VerifyUserAuthOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_ByteArray_ToString(IntPtr byteArray, uint length, IntPtr outBuffer, [Out] uint inOutBufferLength)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static ulong EOS_Connect_AddNotifyAuthExpiration(IntPtr handle, IntPtr options, IntPtr clientData, Connect.OnAuthExpirationCallback notification)
		{
			var _AddNotifyAuthExpirationOptions = Marshal.PtrToStructure<AddNotifyAuthExpirationOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static ulong EOS_Connect_AddNotifyLoginStatusChanged(IntPtr handle, IntPtr options, IntPtr clientData, Connect.OnLoginStatusChangedCallback notification)
		{
			var _AddNotifyLoginStatusChangedOptions = Marshal.PtrToStructure<AddNotifyLoginStatusChangedOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_Connect_CopyIdToken(IntPtr handle, IntPtr options, IntPtr outIdToken)
		{
			var _CopyIdTokenOptions = Marshal.PtrToStructure<CopyIdTokenOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_Connect_CopyProductUserExternalAccountByAccountId(IntPtr handle, IntPtr options, IntPtr outExternalAccountInfo)
		{
			var _CopyProductUserExternalAccountByAccountIdOptions = Marshal.PtrToStructure<CopyProductUserExternalAccountByAccountIdOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_Connect_CopyProductUserExternalAccountByAccountType(IntPtr handle, IntPtr options, IntPtr outExternalAccountInfo)
		{
			var _CopyProductUserExternalAccountByAccountTypeOptions = Marshal.PtrToStructure<CopyProductUserExternalAccountByAccountTypeOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_Connect_CopyProductUserExternalAccountByIndex(IntPtr handle, IntPtr options, IntPtr outExternalAccountInfo)
		{
			var _CopyProductUserExternalAccountByIndexOptions = Marshal.PtrToStructure<CopyProductUserExternalAccountByIndexOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_Connect_CopyProductUserInfo(IntPtr handle, IntPtr options, IntPtr outExternalAccountInfo)
		{
			var _CopyProductUserInfoOptions = Marshal.PtrToStructure<CopyProductUserInfoOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Connect_CreateDeviceId(IntPtr handle, IntPtr options, IntPtr clientData, Connect.OnCreateDeviceIdCallback completionDelegate)
		{
			var _CreateDeviceIdOptions = Marshal.PtrToStructure<CreateDeviceIdOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Connect_CreateUser(IntPtr handle, IntPtr options, IntPtr clientData, Connect.OnCreateUserCallback completionDelegate)
		{
			var _CreateUserOptions = Marshal.PtrToStructure<CreateUserOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Connect_DeleteDeviceId(IntPtr handle, IntPtr options, IntPtr clientData, Connect.OnDeleteDeviceIdCallback completionDelegate)
		{
			var _DeleteDeviceIdOptions = Marshal.PtrToStructure<DeleteDeviceIdOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Connect_ExternalAccountInfo_Release(IntPtr externalAccountInfo)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static IntPtr EOS_Connect_GetExternalAccountMapping(IntPtr handle, IntPtr options)
		{
			var _GetExternalAccountMappingsOptions = Marshal.PtrToStructure<GetExternalAccountMappingsOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static IntPtr EOS_Connect_GetLoggedInUserByIndex(IntPtr handle, int index)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static int EOS_Connect_GetLoggedInUsersCount(IntPtr handle)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static LoginStatus EOS_Connect_GetLoginStatus(IntPtr handle, IntPtr localUserId)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static uint EOS_Connect_GetProductUserExternalAccountCount(IntPtr handle, IntPtr options)
		{
			var _GetProductUserExternalAccountCountOptions = Marshal.PtrToStructure<GetProductUserExternalAccountCountOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_Connect_GetProductUserIdMapping(IntPtr handle, IntPtr options, IntPtr outBuffer, [Out] int inOutBufferLength)
		{
			var _GetProductUserIdMappingOptions = Marshal.PtrToStructure<GetProductUserIdMappingOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Connect_IdToken_Release(IntPtr idToken)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Connect_LinkAccount(IntPtr handle, IntPtr options, IntPtr clientData, Connect.OnLinkAccountCallback completionDelegate)
		{
			var _LinkAccountOptions = Marshal.PtrToStructure<LinkAccountOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Connect_Login(IntPtr handle, IntPtr options, IntPtr clientData, Connect.OnLoginCallback completionDelegate)
		{
			var _LoginOptions = Marshal.PtrToStructure<LoginOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Connect_QueryExternalAccountMappings(IntPtr handle, IntPtr options, IntPtr clientData, Connect.OnQueryExternalAccountMappingsCallback completionDelegate)
		{
			var _QueryExternalAccountMappingsOptions = Marshal.PtrToStructure<QueryExternalAccountMappingsOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Connect_QueryProductUserIdMappings(IntPtr handle, IntPtr options, IntPtr clientData, Connect.OnQueryProductUserIdMappingsCallback completionDelegate)
		{
			var _QueryProductUserIdMappingsOptions = Marshal.PtrToStructure<QueryProductUserIdMappingsOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Connect_RemoveNotifyAuthExpiration(IntPtr handle, ulong inId)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Connect_RemoveNotifyLoginStatusChanged(IntPtr handle, ulong inId)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Connect_TransferDeviceIdAccount(IntPtr handle, IntPtr options, IntPtr clientData, Connect.OnTransferDeviceIdAccountCallback completionDelegate)
		{
			var _TransferDeviceIdAccountOptions = Marshal.PtrToStructure<TransferDeviceIdAccountOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Connect_UnlinkAccount(IntPtr handle, IntPtr options, IntPtr clientData, Connect.OnUnlinkAccountCallback completionDelegate)
		{
			var _UnlinkAccountOptions = Marshal.PtrToStructure<UnlinkAccountOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Connect_VerifyIdToken(IntPtr handle, IntPtr options, IntPtr clientData, Connect.OnVerifyIdTokenCallback completionDelegate)
		{
			var _VerifyIdTokenOptions = Marshal.PtrToStructure<VerifyIdTokenOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_ContinuanceToken_ToString(IntPtr continuanceToken, IntPtr outBuffer, [Out] int inOutBufferLength)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_CustomInvites_AcceptRequestToJoin(IntPtr handle, IntPtr options, IntPtr clientData, CustomInvites.OnAcceptRequestToJoinCallback completionDelegate)
		{
			var _AcceptRequestToJoinOptions = Marshal.PtrToStructure<AcceptRequestToJoinOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static ulong EOS_CustomInvites_AddNotifyCustomInviteAccepted(IntPtr handle, IntPtr options, IntPtr clientData, CustomInvites.OnCustomInviteAcceptedCallback notificationFn)
		{
			var _AddNotifyCustomInviteAcceptedOptions = Marshal.PtrToStructure<AddNotifyCustomInviteAcceptedOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static ulong EOS_CustomInvites_AddNotifyCustomInviteReceived(IntPtr handle, IntPtr options, IntPtr clientData, CustomInvites.OnCustomInviteReceivedCallback notificationFn)
		{
			var _AddNotifyCustomInviteReceivedOptions = Marshal.PtrToStructure<AddNotifyCustomInviteReceivedOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static ulong EOS_CustomInvites_AddNotifyCustomInviteRejected(IntPtr handle, IntPtr options, IntPtr clientData, CustomInvites.OnCustomInviteRejectedCallback notificationFn)
		{
			var _AddNotifyCustomInviteRejectedOptions = Marshal.PtrToStructure<AddNotifyCustomInviteRejectedOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static ulong EOS_CustomInvites_AddNotifyRequestToJoinAccepted(IntPtr handle, IntPtr options, IntPtr clientData, CustomInvites.OnRequestToJoinAcceptedCallback notificationFn)
		{
			var _AddNotifyRequestToJoinAcceptedOptions = Marshal.PtrToStructure<AddNotifyRequestToJoinAcceptedOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static ulong EOS_CustomInvites_AddNotifyRequestToJoinReceived(IntPtr handle, IntPtr options, IntPtr clientData, CustomInvites.OnRequestToJoinReceivedCallback notificationFn)
		{
			var _AddNotifyRequestToJoinReceivedOptions = Marshal.PtrToStructure<AddNotifyRequestToJoinReceivedOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static ulong EOS_CustomInvites_AddNotifyRequestToJoinRejected(IntPtr handle, IntPtr options, IntPtr clientData, CustomInvites.OnRequestToJoinRejectedCallback notificationFn)
		{
			var _AddNotifyRequestToJoinRejectedOptions = Marshal.PtrToStructure<AddNotifyRequestToJoinRejectedOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static ulong EOS_CustomInvites_AddNotifyRequestToJoinResponseReceived(IntPtr handle, IntPtr options, IntPtr clientData, CustomInvites.OnRequestToJoinResponseReceivedCallback notificationFn)
		{
			var _AddNotifyRequestToJoinResponseReceivedOptions = Marshal.PtrToStructure<AddNotifyRequestToJoinResponseReceivedOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static ulong EOS_CustomInvites_AddNotifySendCustomNativeInviteRequested(IntPtr handle, IntPtr options, IntPtr clientData, CustomInvites.OnSendCustomNativeInviteRequestedCallback notificationFn)
		{
			var _AddNotifySendCustomNativeInviteRequestedOptions = Marshal.PtrToStructure<AddNotifySendCustomNativeInviteRequestedOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_CustomInvites_FinalizeInvite(IntPtr handle, IntPtr options)
		{
			var _FinalizeInviteOptions = Marshal.PtrToStructure<FinalizeInviteOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_CustomInvites_RejectRequestToJoin(IntPtr handle, IntPtr options, IntPtr clientData, CustomInvites.OnRejectRequestToJoinCallback completionDelegate)
		{
			var _RejectRequestToJoinOptions = Marshal.PtrToStructure<RejectRequestToJoinOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_CustomInvites_RemoveNotifyCustomInviteAccepted(IntPtr handle, ulong inId)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_CustomInvites_RemoveNotifyCustomInviteReceived(IntPtr handle, ulong inId)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_CustomInvites_RemoveNotifyCustomInviteRejected(IntPtr handle, ulong inId)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_CustomInvites_RemoveNotifyRequestToJoinAccepted(IntPtr handle, ulong inId)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_CustomInvites_RemoveNotifyRequestToJoinReceived(IntPtr handle, ulong inId)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_CustomInvites_RemoveNotifyRequestToJoinRejected(IntPtr handle, ulong inId)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_CustomInvites_RemoveNotifyRequestToJoinResponseReceived(IntPtr handle, ulong inId)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_CustomInvites_RemoveNotifySendCustomNativeInviteRequested(IntPtr handle, ulong inId)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_CustomInvites_SendCustomInvite(IntPtr handle, IntPtr options, IntPtr clientData, CustomInvites.OnSendCustomInviteCallback completionDelegate)
		{
			var _SendCustomInviteOptions = Marshal.PtrToStructure<SendCustomInviteOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_CustomInvites_SendRequestToJoin(IntPtr handle, IntPtr options, IntPtr clientData, CustomInvites.OnSendRequestToJoinCallback completionDelegate)
		{
			var _SendRequestToJoinOptions = Marshal.PtrToStructure<SendRequestToJoinOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_CustomInvites_SetCustomInvite(IntPtr handle, IntPtr options)
		{
			var _SetCustomInviteOptions = Marshal.PtrToStructure<SetCustomInviteOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static IntPtr EOS_EApplicationStatus_ToString(Platform.ApplicationStatus applicationStatus)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static IntPtr EOS_ENetworkStatus_ToString(Platform.NetworkStatus networkStatus)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static int EOS_EResult_IsOperationComplete(Result result)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static IntPtr EOS_EResult_ToString(Result result)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Ecom_CatalogItem_Release(IntPtr catalogItem)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Ecom_CatalogOffer_Release(IntPtr catalogOffer)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Ecom_CatalogRelease_Release(IntPtr catalogRelease)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Ecom_Checkout(IntPtr handle, IntPtr options, IntPtr clientData, Ecom.OnCheckoutCallback completionDelegate)
		{
			var _CheckoutOptions = Marshal.PtrToStructure<CheckoutOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_Ecom_CopyEntitlementById(IntPtr handle, IntPtr options, IntPtr outEntitlement)
		{
			var _CopyEntitlementByIdOptions = Marshal.PtrToStructure<CopyEntitlementByIdOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_Ecom_CopyEntitlementByIndex(IntPtr handle, IntPtr options, IntPtr outEntitlement)
		{
			var _CopyEntitlementByIndexOptions = Marshal.PtrToStructure<CopyEntitlementByIndexOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_Ecom_CopyEntitlementByNameAndIndex(IntPtr handle, IntPtr options, IntPtr outEntitlement)
		{
			var _CopyEntitlementByNameAndIndexOptions = Marshal.PtrToStructure<CopyEntitlementByNameAndIndexOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_Ecom_CopyItemById(IntPtr handle, IntPtr options, IntPtr outItem)
		{
			var _CopyItemByIdOptions = Marshal.PtrToStructure<CopyItemByIdOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_Ecom_CopyItemImageInfoByIndex(IntPtr handle, IntPtr options, IntPtr outImageInfo)
		{
			var _CopyItemImageInfoByIndexOptions = Marshal.PtrToStructure<CopyItemImageInfoByIndexOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_Ecom_CopyItemReleaseByIndex(IntPtr handle, IntPtr options, IntPtr outRelease)
		{
			var _CopyItemReleaseByIndexOptions = Marshal.PtrToStructure<CopyItemReleaseByIndexOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_Ecom_CopyLastRedeemedEntitlementByIndex(IntPtr handle, IntPtr options, IntPtr outRedeemedEntitlementId, [Out] int inOutRedeemedEntitlementIdLength)
		{
			var _CopyLastRedeemedEntitlementByIndexOptions = Marshal.PtrToStructure<CopyLastRedeemedEntitlementByIndexOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_Ecom_CopyOfferById(IntPtr handle, IntPtr options, IntPtr outOffer)
		{
			var _CopyOfferByIdOptions = Marshal.PtrToStructure<CopyOfferByIdOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_Ecom_CopyOfferByIndex(IntPtr handle, IntPtr options, IntPtr outOffer)
		{
			var _CopyOfferByIndexOptions = Marshal.PtrToStructure<CopyOfferByIndexOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_Ecom_CopyOfferImageInfoByIndex(IntPtr handle, IntPtr options, IntPtr outImageInfo)
		{
			var _CopyOfferImageInfoByIndexOptions = Marshal.PtrToStructure<CopyOfferImageInfoByIndexOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_Ecom_CopyOfferItemByIndex(IntPtr handle, IntPtr options, IntPtr outItem)
		{
			var _CopyOfferItemByIndexOptions = Marshal.PtrToStructure<CopyOfferItemByIndexOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_Ecom_CopyTransactionById(IntPtr handle, IntPtr options, IntPtr outTransaction)
		{
			var _CopyTransactionByIdOptions = Marshal.PtrToStructure<CopyTransactionByIdOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_Ecom_CopyTransactionByIndex(IntPtr handle, IntPtr options, IntPtr outTransaction)
		{
			var _CopyTransactionByIndexOptions = Marshal.PtrToStructure<CopyTransactionByIndexOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Ecom_Entitlement_Release(IntPtr entitlement)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static uint EOS_Ecom_GetEntitlementsByNameCount(IntPtr handle, IntPtr options)
		{
			var _GetEntitlementsByNameCountOptions = Marshal.PtrToStructure<GetEntitlementsByNameCountOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static uint EOS_Ecom_GetEntitlementsCount(IntPtr handle, IntPtr options)
		{
			var _GetEntitlementsCountOptions = Marshal.PtrToStructure<GetEntitlementsCountOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static uint EOS_Ecom_GetItemImageInfoCount(IntPtr handle, IntPtr options)
		{
			var _GetItemImageInfoCountOptions = Marshal.PtrToStructure<GetItemImageInfoCountOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static uint EOS_Ecom_GetItemReleaseCount(IntPtr handle, IntPtr options)
		{
			var _GetItemReleaseCountOptions = Marshal.PtrToStructure<GetItemReleaseCountOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static uint EOS_Ecom_GetLastRedeemedEntitlementsCount(IntPtr handle, IntPtr options)
		{
			var _GetLastRedeemedEntitlementsCountOptions = Marshal.PtrToStructure<GetLastRedeemedEntitlementsCountOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static uint EOS_Ecom_GetOfferCount(IntPtr handle, IntPtr options)
		{
			var _GetOfferCountOptions = Marshal.PtrToStructure<GetOfferCountOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static uint EOS_Ecom_GetOfferImageInfoCount(IntPtr handle, IntPtr options)
		{
			var _GetOfferImageInfoCountOptions = Marshal.PtrToStructure<GetOfferImageInfoCountOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static uint EOS_Ecom_GetOfferItemCount(IntPtr handle, IntPtr options)
		{
			var _GetOfferItemCountOptions = Marshal.PtrToStructure<GetOfferItemCountOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static uint EOS_Ecom_GetTransactionCount(IntPtr handle, IntPtr options)
		{
			var _GetTransactionCountOptions = Marshal.PtrToStructure<GetTransactionCountOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Ecom_KeyImageInfo_Release(IntPtr keyImageInfo)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Ecom_QueryEntitlementToken(IntPtr handle, IntPtr options, IntPtr clientData, Ecom.OnQueryEntitlementTokenCallback completionDelegate)
		{
			var _QueryEntitlementTokenOptions = Marshal.PtrToStructure<QueryEntitlementTokenOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Ecom_QueryEntitlements(IntPtr handle, IntPtr options, IntPtr clientData, Ecom.OnQueryEntitlementsCallback completionDelegate)
		{
			var _QueryEntitlementsOptions = Marshal.PtrToStructure<QueryEntitlementsOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Ecom_QueryOffers(IntPtr handle, IntPtr options, IntPtr clientData, Ecom.OnQueryOffersCallback completionDelegate)
		{
			var _QueryOffersOptions = Marshal.PtrToStructure<QueryOffersOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Ecom_QueryOwnership(IntPtr handle, IntPtr options, IntPtr clientData, Ecom.OnQueryOwnershipCallback completionDelegate)
		{
			var _QueryOwnershipOptions = Marshal.PtrToStructure<QueryOwnershipOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Ecom_QueryOwnershipBySandboxIds(IntPtr handle, IntPtr options, IntPtr clientData, Ecom.OnQueryOwnershipBySandboxIdsCallback completionDelegate)
		{
			var _QueryOwnershipBySandboxIdsOptions = Marshal.PtrToStructure<QueryOwnershipBySandboxIdsOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Ecom_QueryOwnershipToken(IntPtr handle, IntPtr options, IntPtr clientData, Ecom.OnQueryOwnershipTokenCallback completionDelegate)
		{
			var _QueryOwnershipTokenOptions = Marshal.PtrToStructure<QueryOwnershipTokenOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Ecom_RedeemEntitlements(IntPtr handle, IntPtr options, IntPtr clientData, Ecom.OnRedeemEntitlementsCallback completionDelegate)
		{
			var _RedeemEntitlementsOptions = Marshal.PtrToStructure<RedeemEntitlementsOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_Ecom_Transaction_CopyEntitlementByIndex(IntPtr handle, IntPtr options, IntPtr outEntitlement)
		{
			var _TransactionCopyEntitlementByIndexOptions = Marshal.PtrToStructure<TransactionCopyEntitlementByIndexOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static uint EOS_Ecom_Transaction_GetEntitlementsCount(IntPtr handle, IntPtr options)
		{
			var _TransactionGetEntitlementsCountOptions = Marshal.PtrToStructure<TransactionGetEntitlementsCountOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_Ecom_Transaction_GetTransactionId(IntPtr handle, IntPtr outBuffer, [Out] int inOutBufferLength)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Ecom_Transaction_Release(IntPtr transaction)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static IntPtr EOS_EpicAccountId_FromString(IntPtr accountIdString)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static int EOS_EpicAccountId_IsValid(IntPtr accountId)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_EpicAccountId_ToString(IntPtr accountId, IntPtr outBuffer, [Out] int inOutBufferLength)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Friends_AcceptInvite(IntPtr handle, IntPtr options, IntPtr clientData, Friends.OnAcceptInviteCallback completionDelegate)
		{
			var _AcceptInviteOptions = Marshal.PtrToStructure<AcceptInviteOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static ulong EOS_Friends_AddNotifyBlockedUsersUpdate(IntPtr handle, IntPtr options, IntPtr clientData, Friends.OnBlockedUsersUpdateCallback blockedUsersUpdateHandler)
		{
			var _AddNotifyBlockedUsersUpdateOptions = Marshal.PtrToStructure<AddNotifyBlockedUsersUpdateOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static ulong EOS_Friends_AddNotifyFriendsUpdate(IntPtr handle, IntPtr options, IntPtr clientData, Friends.OnFriendsUpdateCallback friendsUpdateHandler)
		{
			var _AddNotifyFriendsUpdateOptions = Marshal.PtrToStructure<AddNotifyFriendsUpdateOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static IntPtr EOS_Friends_GetBlockedUserAtIndex(IntPtr handle, IntPtr options)
		{
			var _GetBlockedUserAtIndexOptions = Marshal.PtrToStructure<GetBlockedUserAtIndexOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static int EOS_Friends_GetBlockedUsersCount(IntPtr handle, IntPtr options)
		{
			var _GetBlockedUsersCountOptions = Marshal.PtrToStructure<GetBlockedUsersCountOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static IntPtr EOS_Friends_GetFriendAtIndex(IntPtr handle, IntPtr options)
		{
			var _GetFriendAtIndexOptions = Marshal.PtrToStructure<GetFriendAtIndexOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static int EOS_Friends_GetFriendsCount(IntPtr handle, IntPtr options)
		{
			var _GetFriendsCountOptions = Marshal.PtrToStructure<GetFriendsCountOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Friends.FriendsStatus EOS_Friends_GetStatus(IntPtr handle, IntPtr options)
		{
			var _GetStatusOptions = Marshal.PtrToStructure<GetStatusOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Friends_QueryFriends(IntPtr handle, IntPtr options, IntPtr clientData, Friends.OnQueryFriendsCallback completionDelegate)
		{
			var _QueryFriendsOptions = Marshal.PtrToStructure<QueryFriendsOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Friends_RejectInvite(IntPtr handle, IntPtr options, IntPtr clientData, Friends.OnRejectInviteCallback completionDelegate)
		{
			var _RejectInviteOptions = Marshal.PtrToStructure<RejectInviteOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Friends_RemoveNotifyBlockedUsersUpdate(IntPtr handle, ulong notificationId)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Friends_RemoveNotifyFriendsUpdate(IntPtr handle, ulong notificationId)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Friends_SendInvite(IntPtr handle, IntPtr options, IntPtr clientData, Friends.OnSendInviteCallback completionDelegate)
		{
			var _SendInviteOptions = Marshal.PtrToStructure<SendInviteOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static IntPtr EOS_GetVersion()
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_Initialize(IntPtr options)
        {
			var _InitializeOptions = Marshal.PtrToStructure<InitializeOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_IntegratedPlatformOptionsContainer_Add(IntPtr handle, IntPtr inOptions)
		{
			var _IntegratedPlatformOptionsContainerAddOptions = Marshal.PtrToStructure<IntegratedPlatformOptionsContainerAddOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_IntegratedPlatformOptionsContainer_Release(IntPtr integratedPlatformOptionsContainerHandle)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static ulong EOS_IntegratedPlatform_AddNotifyUserLoginStatusChanged(IntPtr handle, IntPtr options, IntPtr clientData, IntegratedPlatform.OnUserLoginStatusChangedCallback callbackFunction)
		{
			var _AddNotifyUserLoginStatusChangedOptions = Marshal.PtrToStructure<AddNotifyUserLoginStatusChangedOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_IntegratedPlatform_ClearUserPreLogoutCallback(IntPtr handle, IntPtr options)
		{
			var _ClearUserPreLogoutCallbackOptions = Marshal.PtrToStructure<ClearUserPreLogoutCallbackOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_IntegratedPlatform_CreateIntegratedPlatformOptionsContainer(IntPtr options, IntPtr outIntegratedPlatformOptionsContainerHandle)
        {
			var _CreateIntegratedPlatformOptionsContainerOptions = Marshal.PtrToStructure<CreateIntegratedPlatformOptionsContainerOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_IntegratedPlatform_FinalizeDeferredUserLogout(IntPtr handle, IntPtr options)
		{
			var _FinalizeDeferredUserLogoutOptions = Marshal.PtrToStructure<FinalizeDeferredUserLogoutOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_IntegratedPlatform_RemoveNotifyUserLoginStatusChanged(IntPtr handle, ulong notificationId)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_IntegratedPlatform_SetUserLoginStatus(IntPtr handle, IntPtr options)
		{
			var _SetUserLoginStatusOptions = Marshal.PtrToStructure<SetUserLoginStatusOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_IntegratedPlatform_SetUserPreLogoutCallback(IntPtr handle, IntPtr options, IntPtr clientData, IntegratedPlatform.OnUserPreLogoutCallback callbackFunction)
		{
			var _SetUserPreLogoutCallbackOptions = Marshal.PtrToStructure<SetUserPreLogoutCallbackOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static ulong EOS_KWS_AddNotifyPermissionsUpdateReceived(IntPtr handle, IntPtr options, IntPtr clientData, KWS.OnPermissionsUpdateReceivedCallback notificationFn)
		{
			var _AddNotifyPermissionsUpdateReceivedOptions = Marshal.PtrToStructure<AddNotifyPermissionsUpdateReceivedOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_KWS_CopyPermissionByIndex(IntPtr handle, IntPtr options, IntPtr outPermission)
		{
			var _CopyPermissionByIndexOptions = Marshal.PtrToStructure<CopyPermissionByIndexOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_KWS_CreateUser(IntPtr handle, IntPtr options, IntPtr clientData, KWS.OnCreateUserCallback completionDelegate)
		{
			var _CreateUserOptions = Marshal.PtrToStructure<CreateUserOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_KWS_GetPermissionByKey(IntPtr handle, IntPtr options, IntPtr outPermission)
		{
			var _GetPermissionByKeyOptions = Marshal.PtrToStructure<GetPermissionByKeyOptions>(options);
            //outPermission  = KWSPermissionStatus ref
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static int EOS_KWS_GetPermissionsCount(IntPtr handle, IntPtr options)
		{
			var _GetPermissionsCountOptions = Marshal.PtrToStructure<GetPermissionsCountOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_KWS_PermissionStatus_Release(IntPtr permissionStatus)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_KWS_QueryAgeGate(IntPtr handle, IntPtr options, IntPtr clientData, KWS.OnQueryAgeGateCallback completionDelegate)
		{
			var _QueryAgeGateOptions = Marshal.PtrToStructure<QueryAgeGateOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_KWS_QueryPermissions(IntPtr handle, IntPtr options, IntPtr clientData, KWS.OnQueryPermissionsCallback completionDelegate)
		{
			var _QueryPermissionsOptions = Marshal.PtrToStructure<QueryPermissionsOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_KWS_RemoveNotifyPermissionsUpdateReceived(IntPtr handle, ulong inId)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_KWS_RequestPermissions(IntPtr handle, IntPtr options, IntPtr clientData, KWS.OnRequestPermissionsCallback completionDelegate)
		{
			var _RequestPermissionsOptions = Marshal.PtrToStructure<RequestPermissionsOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_KWS_UpdateParentEmail(IntPtr handle, IntPtr options, IntPtr clientData, KWS.OnUpdateParentEmailCallback completionDelegate)
		{
			var _UpdateParentEmailOptions = Marshal.PtrToStructure<UpdateParentEmailOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_Leaderboards_CopyLeaderboardDefinitionByIndex(IntPtr handle, IntPtr options, IntPtr outLeaderboardDefinition)
		{
			var _CopyLeaderboardDefinitionByIndexOptions = Marshal.PtrToStructure<CopyLeaderboardDefinitionByIndexOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_Leaderboards_CopyLeaderboardDefinitionByLeaderboardId(IntPtr handle, IntPtr options, IntPtr outLeaderboardDefinition)
		{
			var _CopyLeaderboardDefinitionByLeaderboardIdOptions = Marshal.PtrToStructure<CopyLeaderboardDefinitionByLeaderboardIdOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_Leaderboards_CopyLeaderboardRecordByIndex(IntPtr handle, IntPtr options, IntPtr outLeaderboardRecord)
		{
			var _CopyLeaderboardRecordByIndexOptions = Marshal.PtrToStructure<CopyLeaderboardRecordByIndexOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_Leaderboards_CopyLeaderboardRecordByUserId(IntPtr handle, IntPtr options, IntPtr outLeaderboardRecord)
		{
			var _CopyLeaderboardRecordByUserIdOptions = Marshal.PtrToStructure<CopyLeaderboardRecordByUserIdOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_Leaderboards_CopyLeaderboardUserScoreByIndex(IntPtr handle, IntPtr options, IntPtr outLeaderboardUserScore)
		{
			var _CopyLeaderboardUserScoreByIndexOptions = Marshal.PtrToStructure<CopyLeaderboardUserScoreByIndexOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_Leaderboards_CopyLeaderboardUserScoreByUserId(IntPtr handle, IntPtr options, IntPtr outLeaderboardUserScore)
		{
			var _CopyLeaderboardUserScoreByUserIdOptions = Marshal.PtrToStructure<CopyLeaderboardUserScoreByUserIdOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Leaderboards_Definition_Release(IntPtr leaderboardDefinition)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static uint EOS_Leaderboards_GetLeaderboardDefinitionCount(IntPtr handle, IntPtr options)
		{
			var _GetLeaderboardDefinitionCountOptions = Marshal.PtrToStructure<GetLeaderboardDefinitionCountOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static uint EOS_Leaderboards_GetLeaderboardRecordCount(IntPtr handle, IntPtr options)
		{
			var _GetLeaderboardRecordCountOptions = Marshal.PtrToStructure<GetLeaderboardRecordCountOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static uint EOS_Leaderboards_GetLeaderboardUserScoreCount(IntPtr handle, IntPtr options)
		{
			var _GetLeaderboardUserScoreCountOptions = Marshal.PtrToStructure<GetLeaderboardUserScoreCountOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Leaderboards_LeaderboardDefinition_Release(IntPtr leaderboardDefinition)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Leaderboards_LeaderboardRecord_Release(IntPtr leaderboardRecord)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Leaderboards_LeaderboardUserScore_Release(IntPtr leaderboardUserScore)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Leaderboards_QueryLeaderboardDefinitions(IntPtr handle, IntPtr options, IntPtr clientData, Leaderboards.OnQueryLeaderboardDefinitionsCompleteCallback completionDelegate)
		{
			var _QueryLeaderboardDefinitionsOptions = Marshal.PtrToStructure<QueryLeaderboardDefinitionsOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Leaderboards_QueryLeaderboardRanks(IntPtr handle, IntPtr options, IntPtr clientData, Leaderboards.OnQueryLeaderboardRanksCompleteCallback completionDelegate)
		{
			var _QueryLeaderboardRanksOptions = Marshal.PtrToStructure<QueryLeaderboardRanksOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Leaderboards_QueryLeaderboardUserScores(IntPtr handle, IntPtr options, IntPtr clientData, Leaderboards.OnQueryLeaderboardUserScoresCompleteCallback completionDelegate)
		{
			var _QueryLeaderboardUserScoresOptions = Marshal.PtrToStructure<QueryLeaderboardUserScoresOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_LobbyDetails_CopyAttributeByIndex(IntPtr handle, IntPtr options, IntPtr outAttribute)
		{
			var _LobbyDetailsCopyAttributeByIndexOptions = Marshal.PtrToStructure<LobbyDetailsCopyAttributeByIndexOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_LobbyDetails_CopyAttributeByKey(IntPtr handle, IntPtr options, IntPtr outAttribute)
		{
			var _LobbyDetailsCopyAttributeByKeyOptions = Marshal.PtrToStructure<LobbyDetailsCopyAttributeByKeyOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_LobbyDetails_CopyInfo(IntPtr handle, IntPtr options, IntPtr outLobbyDetailsInfo)
		{
			var _LobbyDetailsCopyInfoOptions = Marshal.PtrToStructure<LobbyDetailsCopyInfoOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_LobbyDetails_CopyMemberAttributeByIndex(IntPtr handle, IntPtr options, IntPtr outAttribute)
		{
			var _LobbyDetailsCopyMemberAttributeByIndexOptions = Marshal.PtrToStructure<LobbyDetailsCopyMemberAttributeByIndexOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_LobbyDetails_CopyMemberAttributeByKey(IntPtr handle, IntPtr options, IntPtr outAttribute)
		{
			var _LobbyDetailsCopyMemberAttributeByKeyOptions = Marshal.PtrToStructure<LobbyDetailsCopyMemberAttributeByKeyOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_LobbyDetails_CopyMemberInfo(IntPtr handle, IntPtr options, IntPtr outLobbyDetailsMemberInfo)
		{
			var _LobbyDetailsCopyMemberInfoOptions = Marshal.PtrToStructure<LobbyDetailsCopyMemberInfoOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static uint EOS_LobbyDetails_GetAttributeCount(IntPtr handle, IntPtr options)
		{
			var _LobbyDetailsGetAttributeCountOptions = Marshal.PtrToStructure<LobbyDetailsGetAttributeCountOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static IntPtr EOS_LobbyDetails_GetLobbyOwner(IntPtr handle, IntPtr options)
		{
			var _LobbyDetailsGetLobbyOwnerOptions = Marshal.PtrToStructure<LobbyDetailsGetLobbyOwnerOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static uint EOS_LobbyDetails_GetMemberAttributeCount(IntPtr handle, IntPtr options)
		{
			var _LobbyDetailsGetMemberAttributeCountOptions = Marshal.PtrToStructure<LobbyDetailsGetMemberAttributeCountOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static IntPtr EOS_LobbyDetails_GetMemberByIndex(IntPtr handle, IntPtr options)
		{
			var _LobbyDetailsGetMemberByIndexOptions = Marshal.PtrToStructure<LobbyDetailsGetMemberByIndexOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static uint EOS_LobbyDetails_GetMemberCount(IntPtr handle, IntPtr options)
		{
			var _LobbyDetailsGetMemberCountOptions = Marshal.PtrToStructure<LobbyDetailsGetMemberCountOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_LobbyDetails_Info_Release(IntPtr lobbyDetailsInfo)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_LobbyDetails_MemberInfo_Release(IntPtr lobbyDetailsMemberInfo)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_LobbyDetails_Release(IntPtr lobbyHandle)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_LobbyModification_AddAttribute(IntPtr handle, IntPtr options)
		{
			var _LobbyModificationAddAttributeOptions = Marshal.PtrToStructure<LobbyModificationAddAttributeOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_LobbyModification_AddMemberAttribute(IntPtr handle, IntPtr options)
		{
			var _LobbyModificationAddMemberAttributeOptions = Marshal.PtrToStructure<LobbyModificationAddMemberAttributeOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_LobbyModification_Release(IntPtr lobbyModificationHandle)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_LobbyModification_RemoveAttribute(IntPtr handle, IntPtr options)
		{
			var _LobbyModificationRemoveAttributeOptions = Marshal.PtrToStructure<LobbyModificationRemoveAttributeOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_LobbyModification_RemoveMemberAttribute(IntPtr handle, IntPtr options)
		{
			var _LobbyModificationRemoveMemberAttributeOptions = Marshal.PtrToStructure<LobbyModificationRemoveMemberAttributeOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_LobbyModification_SetAllowedPlatformIds(IntPtr handle, IntPtr options)
		{
			var _LobbyModificationSetAllowedPlatformIdsOptions = Marshal.PtrToStructure<LobbyModificationSetAllowedPlatformIdsOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_LobbyModification_SetBucketId(IntPtr handle, IntPtr options)
		{
			var _LobbyModificationSetBucketIdOptions = Marshal.PtrToStructure<LobbyModificationSetBucketIdOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_LobbyModification_SetInvitesAllowed(IntPtr handle, IntPtr options)
		{
			var _LobbyModificationSetInvitesAllowedOptions = Marshal.PtrToStructure<LobbyModificationSetInvitesAllowedOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_LobbyModification_SetMaxMembers(IntPtr handle, IntPtr options)
		{
			var _LobbyModificationSetMaxMembersOptions = Marshal.PtrToStructure<LobbyModificationSetMaxMembersOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_LobbyModification_SetPermissionLevel(IntPtr handle, IntPtr options)
		{
			var _LobbyModificationSetPermissionLevelOptions = Marshal.PtrToStructure<LobbyModificationSetPermissionLevelOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_LobbySearch_CopySearchResultByIndex(IntPtr handle, IntPtr options, IntPtr outLobbyDetailsHandle)
		{
			var _LobbySearchCopySearchResultByIndexOptions = Marshal.PtrToStructure<LobbySearchCopySearchResultByIndexOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_LobbySearch_Find(IntPtr handle, IntPtr options, IntPtr clientData, Lobby.LobbySearchOnFindCallback completionDelegate)
		{
			var _LobbySearchFindOptions = Marshal.PtrToStructure<LobbySearchFindOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static uint EOS_LobbySearch_GetSearchResultCount(IntPtr handle, IntPtr options)
		{
			var _LobbySearchGetSearchResultCountOptions = Marshal.PtrToStructure<LobbySearchGetSearchResultCountOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_LobbySearch_Release(IntPtr lobbySearchHandle)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_LobbySearch_RemoveParameter(IntPtr handle, IntPtr options)
		{
			var _LobbySearchRemoveParameterOptions = Marshal.PtrToStructure<LobbySearchRemoveParameterOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_LobbySearch_SetLobbyId(IntPtr handle, IntPtr options)
		{
			var _LobbySearchSetLobbyIdOptions = Marshal.PtrToStructure<LobbySearchSetLobbyIdOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_LobbySearch_SetMaxResults(IntPtr handle, IntPtr options)
		{
			var _LobbySearchSetMaxResultsOptions = Marshal.PtrToStructure<LobbySearchSetMaxResultsOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_LobbySearch_SetParameter(IntPtr handle, IntPtr options)
		{
			var _LobbySearchSetParameterOptions = Marshal.PtrToStructure<LobbySearchSetParameterOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_LobbySearch_SetTargetUserId(IntPtr handle, IntPtr options)
		{
			var _LobbySearchSetTargetUserIdOptions = Marshal.PtrToStructure<LobbySearchSetTargetUserIdOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static ulong EOS_Lobby_AddNotifyJoinLobbyAccepted(IntPtr handle, IntPtr options, IntPtr clientData, Lobby.OnJoinLobbyAcceptedCallback notificationFn)
		{
			var _AddNotifyJoinLobbyAcceptedOptions = Marshal.PtrToStructure<AddNotifyJoinLobbyAcceptedOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static ulong EOS_Lobby_AddNotifyLeaveLobbyRequested(IntPtr handle, IntPtr options, IntPtr clientData, Lobby.OnLeaveLobbyRequestedCallback notificationFn)
		{
			var _AddNotifyLeaveLobbyRequestedOptions = Marshal.PtrToStructure<AddNotifyLeaveLobbyRequestedOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static ulong EOS_Lobby_AddNotifyLobbyInviteAccepted(IntPtr handle, IntPtr options, IntPtr clientData, Lobby.OnLobbyInviteAcceptedCallback notificationFn)
		{
			var _AddNotifyLobbyInviteAcceptedOptions = Marshal.PtrToStructure<AddNotifyLobbyInviteAcceptedOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static ulong EOS_Lobby_AddNotifyLobbyInviteReceived(IntPtr handle, IntPtr options, IntPtr clientData, Lobby.OnLobbyInviteReceivedCallback notificationFn)
		{
			var _AddNotifyLobbyInviteReceivedOptions = Marshal.PtrToStructure<AddNotifyLobbyInviteReceivedOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static ulong EOS_Lobby_AddNotifyLobbyInviteRejected(IntPtr handle, IntPtr options, IntPtr clientData, Lobby.OnLobbyInviteRejectedCallback notificationFn)
		{
			var _AddNotifyLobbyInviteRejectedOptions = Marshal.PtrToStructure<AddNotifyLobbyInviteRejectedOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static ulong EOS_Lobby_AddNotifyLobbyMemberStatusReceived(IntPtr handle, IntPtr options, IntPtr clientData, Lobby.OnLobbyMemberStatusReceivedCallback notificationFn)
		{
			var _AddNotifyLobbyMemberStatusReceivedOptions = Marshal.PtrToStructure<AddNotifyLobbyMemberStatusReceivedOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static ulong EOS_Lobby_AddNotifyLobbyMemberUpdateReceived(IntPtr handle, IntPtr options, IntPtr clientData, Lobby.OnLobbyMemberUpdateReceivedCallback notificationFn)
		{
			var _AddNotifyLobbyMemberUpdateReceivedOptions = Marshal.PtrToStructure<AddNotifyLobbyMemberUpdateReceivedOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static ulong EOS_Lobby_AddNotifyLobbyUpdateReceived(IntPtr handle, IntPtr options, IntPtr clientData, Lobby.OnLobbyUpdateReceivedCallback notificationFn)
		{
			var _AddNotifyLobbyUpdateReceivedOptions = Marshal.PtrToStructure<AddNotifyLobbyUpdateReceivedOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static ulong EOS_Lobby_AddNotifyRTCRoomConnectionChanged(IntPtr handle, IntPtr options, IntPtr clientData, Lobby.OnRTCRoomConnectionChangedCallback notificationFn)
		{
			var _AddNotifyRTCRoomConnectionChangedOptions = Marshal.PtrToStructure<AddNotifyRTCRoomConnectionChangedOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static ulong EOS_Lobby_AddNotifySendLobbyNativeInviteRequested(IntPtr handle, IntPtr options, IntPtr clientData, Lobby.OnSendLobbyNativeInviteRequestedCallback notificationFn)
		{
			var _AddNotifySendLobbyNativeInviteRequestedOptions = Marshal.PtrToStructure<AddNotifySendLobbyNativeInviteRequestedOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Lobby_Attribute_Release(IntPtr lobbyAttribute)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_Lobby_CopyLobbyDetailsHandle(IntPtr handle, IntPtr options, IntPtr outLobbyDetailsHandle)
		{
			var _CopyLobbyDetailsHandleOptions = Marshal.PtrToStructure<CopyLobbyDetailsHandleOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_Lobby_CopyLobbyDetailsHandleByInviteId(IntPtr handle, IntPtr options, IntPtr outLobbyDetailsHandle)
		{
			var _CopyLobbyDetailsHandleByInviteIdOptions = Marshal.PtrToStructure<CopyLobbyDetailsHandleByInviteIdOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_Lobby_CopyLobbyDetailsHandleByUiEventId(IntPtr handle, IntPtr options, IntPtr outLobbyDetailsHandle)
		{
			var _CopyLobbyDetailsHandleByUiEventIdOptions = Marshal.PtrToStructure<CopyLobbyDetailsHandleByUiEventIdOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Lobby_CreateLobby(IntPtr handle, IntPtr options, IntPtr clientData, Lobby.OnCreateLobbyCallback completionDelegate)
		{
			var _CreateLobbyOptions = Marshal.PtrToStructure<CreateLobbyOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_Lobby_CreateLobbySearch(IntPtr handle, IntPtr options, IntPtr outLobbySearchHandle)
		{
			var _CreateLobbySearchOptions = Marshal.PtrToStructure<CreateLobbySearchOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Lobby_DestroyLobby(IntPtr handle, IntPtr options, IntPtr clientData, Lobby.OnDestroyLobbyCallback completionDelegate)
		{
			var _DestroyLobbyOptions = Marshal.PtrToStructure<DestroyLobbyOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_Lobby_GetConnectString(IntPtr handle, IntPtr options, IntPtr outBuffer, [Out] uint inOutBufferLength)
		{
			var _GetConnectStringOptions = Marshal.PtrToStructure<GetConnectStringOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static uint EOS_Lobby_GetInviteCount(IntPtr handle, IntPtr options)
		{
			var _GetInviteCountOptions = Marshal.PtrToStructure<GetInviteCountOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_Lobby_GetInviteIdByIndex(IntPtr handle, IntPtr options, IntPtr outBuffer, [Out] int inOutBufferLength)
		{
			var _GetInviteIdByIndexOptions = Marshal.PtrToStructure<GetInviteIdByIndexOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_Lobby_GetRTCRoomName(IntPtr handle, IntPtr options, IntPtr outBuffer, [Out] uint inOutBufferLength)
		{
			var _GetRTCRoomNameOptions = Marshal.PtrToStructure<GetRTCRoomNameOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Lobby_HardMuteMember(IntPtr handle, IntPtr options, IntPtr clientData, Lobby.OnHardMuteMemberCallback completionDelegate)
		{
			var _HardMuteMemberOptions = Marshal.PtrToStructure<HardMuteMemberOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_Lobby_IsRTCRoomConnected(IntPtr handle, IntPtr options, [Out] int bOutIsConnected)
		{
			var _IsRTCRoomConnectedOptions = Marshal.PtrToStructure<IsRTCRoomConnectedOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Lobby_JoinLobby(IntPtr handle, IntPtr options, IntPtr clientData, Lobby.OnJoinLobbyCallback completionDelegate)
		{
			var _JoinLobbyOptions = Marshal.PtrToStructure<JoinLobbyOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Lobby_JoinLobbyById(IntPtr handle, IntPtr options, IntPtr clientData, Lobby.OnJoinLobbyByIdCallback completionDelegate)
		{
			var _JoinLobbyByIdOptions = Marshal.PtrToStructure<JoinLobbyByIdOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Lobby_KickMember(IntPtr handle, IntPtr options, IntPtr clientData, Lobby.OnKickMemberCallback completionDelegate)
		{
			var _KickMemberOptions = Marshal.PtrToStructure<KickMemberOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Lobby_LeaveLobby(IntPtr handle, IntPtr options, IntPtr clientData, Lobby.OnLeaveLobbyCallback completionDelegate)
		{
			var _LeaveLobbyOptions = Marshal.PtrToStructure<LeaveLobbyOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_Lobby_ParseConnectString(IntPtr handle, IntPtr options, IntPtr outBuffer, [Out] uint inOutBufferLength)
		{
			var _ParseConnectStringOptions = Marshal.PtrToStructure<ParseConnectStringOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Lobby_PromoteMember(IntPtr handle, IntPtr options, IntPtr clientData, Lobby.OnPromoteMemberCallback completionDelegate)
		{
			var _PromoteMemberOptions = Marshal.PtrToStructure<PromoteMemberOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Lobby_QueryInvites(IntPtr handle, IntPtr options, IntPtr clientData, Lobby.OnQueryInvitesCallback completionDelegate)
		{
			var _QueryInvitesOptions = Marshal.PtrToStructure<QueryInvitesOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Lobby_RejectInvite(IntPtr handle, IntPtr options, IntPtr clientData, Lobby.OnRejectInviteCallback completionDelegate)
		{
			var _RejectInviteOptions = Marshal.PtrToStructure<RejectInviteOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Lobby_RemoveNotifyJoinLobbyAccepted(IntPtr handle, ulong inId)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Lobby_RemoveNotifyLeaveLobbyRequested(IntPtr handle, ulong inId)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Lobby_RemoveNotifyLobbyInviteAccepted(IntPtr handle, ulong inId)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Lobby_RemoveNotifyLobbyInviteReceived(IntPtr handle, ulong inId)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Lobby_RemoveNotifyLobbyInviteRejected(IntPtr handle, ulong inId)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Lobby_RemoveNotifyLobbyMemberStatusReceived(IntPtr handle, ulong inId)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Lobby_RemoveNotifyLobbyMemberUpdateReceived(IntPtr handle, ulong inId)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Lobby_RemoveNotifyLobbyUpdateReceived(IntPtr handle, ulong inId)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Lobby_RemoveNotifyRTCRoomConnectionChanged(IntPtr handle, ulong inId)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Lobby_RemoveNotifySendLobbyNativeInviteRequested(IntPtr handle, ulong inId)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Lobby_SendInvite(IntPtr handle, IntPtr options, IntPtr clientData, Lobby.OnSendInviteCallback completionDelegate)
		{
			var _SendInviteOptions = Marshal.PtrToStructure<SendInviteOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Lobby_UpdateLobby(IntPtr handle, IntPtr options, IntPtr clientData, Lobby.OnUpdateLobbyCallback completionDelegate)
		{
			var _UpdateLobbyOptions = Marshal.PtrToStructure<UpdateLobbyOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_Lobby_UpdateLobbyModification(IntPtr handle, IntPtr options, IntPtr outLobbyModificationHandle)
		{
			var _UpdateLobbyModificationOptions = Marshal.PtrToStructure<UpdateLobbyModificationOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_Logging_SetCallback(Logging.LogMessageFuncpublic callback)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_Logging_SetLogLevel(Logging.LogCategory logCategory, Logging.LogLevel logLevel)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_Metrics_BeginPlayerSession(IntPtr handle, IntPtr options)
		{
			var _BeginPlayerSessionOptions = Marshal.PtrToStructure<BeginPlayerSessionOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_Metrics_EndPlayerSession(IntPtr handle, IntPtr options)
		{
			var _EndPlayerSessionOptions = Marshal.PtrToStructure<EndPlayerSessionOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_Mods_CopyModInfo(IntPtr handle, IntPtr options, IntPtr outEnumeratedMods)
		{
			var _CopyModInfoOptions = Marshal.PtrToStructure<CopyModInfoOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Mods_EnumerateMods(IntPtr handle, IntPtr options, IntPtr clientData, Mods.OnEnumerateModsCallback completionDelegate)
		{
			var _EnumerateModsOptions = Marshal.PtrToStructure<EnumerateModsOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Mods_InstallMod(IntPtr handle, IntPtr options, IntPtr clientData, Mods.OnInstallModCallback completionDelegate)
		{
			var _InstallModOptions = Marshal.PtrToStructure<InstallModOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Mods_ModInfo_Release(IntPtr modInfo)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Mods_UninstallMod(IntPtr handle, IntPtr options, IntPtr clientData, Mods.OnUninstallModCallback completionDelegate)
		{
			var _UninstallModOptions = Marshal.PtrToStructure<UninstallModOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Mods_UpdateMod(IntPtr handle, IntPtr options, IntPtr clientData, Mods.OnUpdateModCallback completionDelegate)
		{
			var _UpdateModOptions = Marshal.PtrToStructure<UpdateModOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_P2P_AcceptConnection(IntPtr handle, IntPtr options)
		{
			var _AcceptConnectionOptions = Marshal.PtrToStructure<AcceptConnectionOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static ulong EOS_P2P_AddNotifyIncomingPacketQueueFull(IntPtr handle, IntPtr options, IntPtr clientData, P2P.OnIncomingPacketQueueFullCallback incomingPacketQueueFullHandler)
		{
			var _AddNotifyIncomingPacketQueueFullOptions = Marshal.PtrToStructure<AddNotifyIncomingPacketQueueFullOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static ulong EOS_P2P_AddNotifyPeerConnectionClosed(IntPtr handle, IntPtr options, IntPtr clientData, P2P.OnRemoteConnectionClosedCallback connectionClosedHandler)
		{
			var _AddNotifyPeerConnectionClosedOptions = Marshal.PtrToStructure<AddNotifyPeerConnectionClosedOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static ulong EOS_P2P_AddNotifyPeerConnectionEstablished(IntPtr handle, IntPtr options, IntPtr clientData, P2P.OnPeerConnectionEstablishedCallback connectionEstablishedHandler)
		{
			var _AddNotifyPeerConnectionEstablishedOptions = Marshal.PtrToStructure<AddNotifyPeerConnectionEstablishedOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static ulong EOS_P2P_AddNotifyPeerConnectionInterrupted(IntPtr handle, IntPtr options, IntPtr clientData, P2P.OnPeerConnectionInterruptedCallback connectionInterruptedHandler)
		{
			var _AddNotifyPeerConnectionInterruptedOptions = Marshal.PtrToStructure<AddNotifyPeerConnectionInterruptedOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static ulong EOS_P2P_AddNotifyPeerConnectionRequest(IntPtr handle, IntPtr options, IntPtr clientData, P2P.OnIncomingConnectionRequestCallback connectionRequestHandler)
		{
			var _AddNotifyPeerConnectionRequestOptions = Marshal.PtrToStructure<AddNotifyPeerConnectionRequestOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_P2P_ClearPacketQueue(IntPtr handle, IntPtr options)
		{
			var _ClearPacketQueueOptions = Marshal.PtrToStructure<ClearPacketQueueOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_P2P_CloseConnection(IntPtr handle, IntPtr options)
		{
			var _CloseConnectionOptions = Marshal.PtrToStructure<CloseConnectionOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_P2P_CloseConnections(IntPtr handle, IntPtr options)
		{
			var _CloseConnectionsOptions = Marshal.PtrToStructure<CloseConnectionsOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_P2P_GetNATType(IntPtr handle, IntPtr options, [Out] P2P.NATType outNATType)
		{
			var _GetNATTypeOptions = Marshal.PtrToStructure<GetNATTypeOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_P2P_GetNextReceivedPacketSize(IntPtr handle, IntPtr options, [Out] uint outPacketSizeBytes)
		{
			var _GetNextReceivedPacketSizeOptions = Marshal.PtrToStructure<GetNextReceivedPacketSizeOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_P2P_GetPacketQueueInfo(IntPtr handle, IntPtr options, [Out] P2P.PacketQueueInfo outPacketQueueInfo)
		{
			var _GetPacketQueueInfoOptions = Marshal.PtrToStructure<GetPacketQueueInfoOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_P2P_GetPortRange(IntPtr handle, IntPtr options, [Out] ushort outPort, [Out] ushort outNumAdditionalPortsToTry)
		{
			var _GetPortRangeOptions = Marshal.PtrToStructure<GetPortRangeOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_P2P_GetRelayControl(IntPtr handle, IntPtr options, [Out] P2P.RelayControl outRelayControl)
		{
			var _GetRelayControlOptions = Marshal.PtrToStructure<GetRelayControlOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_P2P_QueryNATType(IntPtr handle, IntPtr options, IntPtr clientData, P2P.OnQueryNATTypeCompleteCallback completionDelegate)
		{
			var _QueryNATTypeOptions = Marshal.PtrToStructure<QueryNATTypeOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_P2P_ReceivePacket(IntPtr handle, IntPtr options, IntPtr outPeerId, [Out] P2P.SocketIdpublic outSocketId, [Out] byte outChannel, IntPtr outData, [Out] uint outBytesWritten)
		{
			var _ReceivePacketOptions = Marshal.PtrToStructure<ReceivePacketOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_P2P_RemoveNotifyIncomingPacketQueueFull(IntPtr handle, ulong notificationId)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_P2P_RemoveNotifyPeerConnectionClosed(IntPtr handle, ulong notificationId)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_P2P_RemoveNotifyPeerConnectionEstablished(IntPtr handle, ulong notificationId)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_P2P_RemoveNotifyPeerConnectionInterrupted(IntPtr handle, ulong notificationId)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_P2P_RemoveNotifyPeerConnectionRequest(IntPtr handle, ulong notificationId)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_P2P_SendPacket(IntPtr handle, IntPtr options)
		{
			var _SendPacketOptions = Marshal.PtrToStructure<SendPacketOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_P2P_SetPacketQueueSize(IntPtr handle, IntPtr options)
		{
			var _SetPacketQueueSizeOptions = Marshal.PtrToStructure<SetPacketQueueSizeOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_P2P_SetPortRange(IntPtr handle, IntPtr options)
		{
			var _SetPortRangeOptions = Marshal.PtrToStructure<SetPortRangeOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_P2P_SetRelayControl(IntPtr handle, IntPtr options)
		{
			var _SetRelayControlOptions = Marshal.PtrToStructure<SetRelayControlOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_Platform_CheckForLauncherAndRestart(IntPtr handle)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static IntPtr EOS_Platform_Create(IntPtr options)
        {
			var _Options = Marshal.PtrToStructure<Options>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static IntPtr EOS_Platform_GetAchievementsInterface(IntPtr handle)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_Platform_GetActiveCountryCode(IntPtr handle, IntPtr localUserId, IntPtr outBuffer, [Out] int inOutBufferLength)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_Platform_GetActiveLocaleCode(IntPtr handle, IntPtr localUserId, IntPtr outBuffer, [Out] int inOutBufferLength)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static IntPtr EOS_Platform_GetAntiCheatClientInterface(IntPtr handle)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static IntPtr EOS_Platform_GetAntiCheatServerInterface(IntPtr handle)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Platform.ApplicationStatus EOS_Platform_GetApplicationStatus(IntPtr handle)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static IntPtr EOS_Platform_GetAuthInterface(IntPtr handle)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static IntPtr EOS_Platform_GetConnectInterface(IntPtr handle)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static IntPtr EOS_Platform_GetCustomInvitesInterface(IntPtr handle)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_Platform_GetDesktopCrossplayStatus(IntPtr handle, IntPtr options, [Out] Platform.DesktopCrossplayStatusInfo outDesktopCrossplayStatusInfo)
		{
			var _GetDesktopCrossplayStatusOptions = Marshal.PtrToStructure<GetDesktopCrossplayStatusOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static IntPtr EOS_Platform_GetEcomInterface(IntPtr handle)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static IntPtr EOS_Platform_GetFriendsInterface(IntPtr handle)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static IntPtr EOS_Platform_GetIntegratedPlatformInterface(IntPtr handle)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static IntPtr EOS_Platform_GetKWSInterface(IntPtr handle)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static IntPtr EOS_Platform_GetLeaderboardsInterface(IntPtr handle)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static IntPtr EOS_Platform_GetLobbyInterface(IntPtr handle)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static IntPtr EOS_Platform_GetMetricsInterface(IntPtr handle)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static IntPtr EOS_Platform_GetModsInterface(IntPtr handle)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Platform.NetworkStatus EOS_Platform_GetNetworkStatus(IntPtr handle)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_Platform_GetOverrideCountryCode(IntPtr handle, IntPtr outBuffer, [Out] int inOutBufferLength)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_Platform_GetOverrideLocaleCode(IntPtr handle, IntPtr outBuffer, [Out] int inOutBufferLength)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static IntPtr EOS_Platform_GetP2PInterface(IntPtr handle)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static IntPtr EOS_Platform_GetPlayerDataStorageInterface(IntPtr handle)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static IntPtr EOS_Platform_GetPresenceInterface(IntPtr handle)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static IntPtr EOS_Platform_GetProgressionSnapshotInterface(IntPtr handle)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static IntPtr EOS_Platform_GetRTCAdminInterface(IntPtr handle)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static IntPtr EOS_Platform_GetRTCInterface(IntPtr handle)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static IntPtr EOS_Platform_GetReportsInterface(IntPtr handle)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static IntPtr EOS_Platform_GetSanctionsInterface(IntPtr handle)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static IntPtr EOS_Platform_GetSessionsInterface(IntPtr handle)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static IntPtr EOS_Platform_GetStatsInterface(IntPtr handle)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static IntPtr EOS_Platform_GetTitleStorageInterface(IntPtr handle)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static IntPtr EOS_Platform_GetUIInterface(IntPtr handle)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static IntPtr EOS_Platform_GetUserInfoInterface(IntPtr handle)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Platform_Release(IntPtr handle)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_Platform_SetApplicationStatus(IntPtr handle, Platform.ApplicationStatus newStatus)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_Platform_SetNetworkStatus(IntPtr handle, Platform.NetworkStatus newStatus)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_Platform_SetOverrideCountryCode(IntPtr handle, IntPtr newCountryCode)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_Platform_SetOverrideLocaleCode(IntPtr handle, IntPtr newLocaleCode)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Platform_Tick(IntPtr handle)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_PlayerDataStorageFileTransferRequest_CancelRequest(IntPtr handle)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_PlayerDataStorageFileTransferRequest_GetFileRequestState(IntPtr handle)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_PlayerDataStorageFileTransferRequest_GetFilename(IntPtr handle, uint filenameStringBufferSizeBytes, IntPtr outStringBuffer, [Out] int outStringLength)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_PlayerDataStorageFileTransferRequest_Release(IntPtr playerDataStorageFileTransferHandle)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_PlayerDataStorage_CopyFileMetadataAtIndex(IntPtr handle, IntPtr copyFileMetadataOptions, IntPtr outMetadata)
		{
			var _CopyFileMetadataAtIndexOptions = Marshal.PtrToStructure<CopyFileMetadataAtIndexOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_PlayerDataStorage_CopyFileMetadataByFilename(IntPtr handle, IntPtr copyFileMetadataOptions, IntPtr outMetadata)
		{
			var _CopyFileMetadataByFilenameOptions = Marshal.PtrToStructure<CopyFileMetadataByFilenameOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_PlayerDataStorage_DeleteCache(IntPtr handle, IntPtr options, IntPtr clientData, PlayerDataStorage.OnDeleteCacheCompleteCallback completionCallback)
		{
			var _DeleteCacheOptions = Marshal.PtrToStructure<DeleteCacheOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_PlayerDataStorage_DeleteFile(IntPtr handle, IntPtr deleteOptions, IntPtr clientData, PlayerDataStorage.OnDeleteFileCompleteCallback completionCallback)
		{
			var _DeleteFileOptions = Marshal.PtrToStructure<DeleteFileOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_PlayerDataStorage_DuplicateFile(IntPtr handle, IntPtr duplicateOptions, IntPtr clientData, PlayerDataStorage.OnDuplicateFileCompleteCallback completionCallback)
		{
			var _DuplicateFileOptions = Marshal.PtrToStructure<DuplicateFileOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_PlayerDataStorage_FileMetadata_Release(IntPtr fileMetadata)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_PlayerDataStorage_GetFileMetadataCount(IntPtr handle, IntPtr getFileMetadataCountOptions, [Out] int outFileMetadataCount)
		{
			var _GetFileMetadataCountOptions = Marshal.PtrToStructure<GetFileMetadataCountOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_PlayerDataStorage_QueryFile(IntPtr handle, IntPtr queryFileOptions, IntPtr clientData, PlayerDataStorage.OnQueryFileCompleteCallback completionCallback)
		{
			var _QueryFileOptions = Marshal.PtrToStructure<QueryFileOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_PlayerDataStorage_QueryFileList(IntPtr handle, IntPtr queryFileListOptions, IntPtr clientData, PlayerDataStorage.OnQueryFileListCompleteCallback completionCallback)
		{
			var _QueryFileListOptions = Marshal.PtrToStructure<QueryFileListOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static IntPtr EOS_PlayerDataStorage_ReadFile(IntPtr handle, IntPtr readOptions, IntPtr clientData, PlayerDataStorage.OnReadFileCompleteCallback completionCallback)
		{
			var _ReadFileOptions = Marshal.PtrToStructure<ReadFileOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static IntPtr EOS_PlayerDataStorage_WriteFile(IntPtr handle, IntPtr writeOptions, IntPtr clientData, PlayerDataStorage.OnWriteFileCompleteCallback completionCallback)
		{
			var _WriteFileOptions = Marshal.PtrToStructure<WriteFileOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_PresenceModification_DeleteData(IntPtr handle, IntPtr options)
		{
			var _PresenceModificationDeleteDataOptions = Marshal.PtrToStructure<PresenceModificationDeleteDataOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_PresenceModification_Release(IntPtr presenceModificationHandle)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_PresenceModification_SetData(IntPtr handle, IntPtr options)
		{
			var _PresenceModificationSetDataOptions = Marshal.PtrToStructure<PresenceModificationSetDataOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_PresenceModification_SetJoinInfo(IntPtr handle, IntPtr options)
		{
			var _PresenceModificationSetJoinInfoOptions = Marshal.PtrToStructure<PresenceModificationSetJoinInfoOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_PresenceModification_SetRawRichText(IntPtr handle, IntPtr options)
		{
			var _PresenceModificationSetRawRichTextOptions = Marshal.PtrToStructure<PresenceModificationSetRawRichTextOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_PresenceModification_SetStatus(IntPtr handle, IntPtr options)
		{
			var _PresenceModificationSetStatusOptions = Marshal.PtrToStructure<PresenceModificationSetStatusOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static ulong EOS_Presence_AddNotifyJoinGameAccepted(IntPtr handle, IntPtr options, IntPtr clientData, Presence.OnJoinGameAcceptedCallback notificationFn)
		{
			var _AddNotifyJoinGameAcceptedOptions = Marshal.PtrToStructure<AddNotifyJoinGameAcceptedOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static ulong EOS_Presence_AddNotifyOnPresenceChanged(IntPtr handle, IntPtr options, IntPtr clientData, Presence.OnPresenceChangedCallback notificationHandler)
		{
			var _AddNotifyOnPresenceChangedOptions = Marshal.PtrToStructure<AddNotifyOnPresenceChangedOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_Presence_CopyPresence(IntPtr handle, IntPtr options, IntPtr outPresence)
		{
			var _CopyPresenceOptions = Marshal.PtrToStructure<CopyPresenceOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_Presence_CreatePresenceModification(IntPtr handle, IntPtr options, IntPtr outPresenceModificationHandle)
		{
			var _CreatePresenceModificationOptions = Marshal.PtrToStructure<CreatePresenceModificationOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_Presence_GetJoinInfo(IntPtr handle, IntPtr options, IntPtr outBuffer, [Out] int inOutBufferLength)
		{
			var _GetJoinInfoOptions = Marshal.PtrToStructure<GetJoinInfoOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static int EOS_Presence_HasPresence(IntPtr handle, IntPtr options)
		{
			var _HasPresenceOptions = Marshal.PtrToStructure<HasPresenceOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Presence_Info_Release(IntPtr presenceInfo)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Presence_QueryPresence(IntPtr handle, IntPtr options, IntPtr clientData, Presence.OnQueryPresenceCompleteCallback completionDelegate)
		{
			var _QueryPresenceOptions = Marshal.PtrToStructure<QueryPresenceOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Presence_RemoveNotifyJoinGameAccepted(IntPtr handle, ulong inId)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Presence_RemoveNotifyOnPresenceChanged(IntPtr handle, ulong notificationId)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Presence_SetPresence(IntPtr handle, IntPtr options, IntPtr clientData, Presence.SetPresenceCompleteCallback completionDelegate)
		{
			var _SetPresenceOptions = Marshal.PtrToStructure<SetPresenceOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static IntPtr EOS_ProductUserId_FromString(IntPtr productUserIdString)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static int EOS_ProductUserId_IsValid(IntPtr accountId)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_ProductUserId_ToString(IntPtr accountId, IntPtr outBuffer, [Out] int inOutBufferLength)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_ProgressionSnapshot_AddProgression(IntPtr handle, IntPtr options)
		{
			var _AddProgressionOptions = Marshal.PtrToStructure<AddProgressionOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_ProgressionSnapshot_BeginSnapshot(IntPtr handle, IntPtr options, [Out] uint outSnapshotId)
		{
			var _BeginSnapshotOptions = Marshal.PtrToStructure<BeginSnapshotOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_ProgressionSnapshot_DeleteSnapshot(IntPtr handle, IntPtr options, IntPtr clientData, ProgressionSnapshot.OnDeleteSnapshotCallback completionDelegate)
		{
			var _DeleteSnapshotOptions = Marshal.PtrToStructure<DeleteSnapshotOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_ProgressionSnapshot_EndSnapshot(IntPtr handle, IntPtr options)
		{
			var _EndSnapshotOptions = Marshal.PtrToStructure<EndSnapshotOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_ProgressionSnapshot_SubmitSnapshot(IntPtr handle, IntPtr options, IntPtr clientData, ProgressionSnapshot.OnSubmitSnapshotCallback completionDelegate)
		{
			var _SubmitSnapshotOptions = Marshal.PtrToStructure<SubmitSnapshotOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_RTCAdmin_CopyUserTokenByIndex(IntPtr handle, IntPtr options, IntPtr outUserToken)
		{
			var _CopyUserTokenByIndexOptions = Marshal.PtrToStructure<CopyUserTokenByIndexOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_RTCAdmin_CopyUserTokenByUserId(IntPtr handle, IntPtr options, IntPtr outUserToken)
		{
			var _CopyUserTokenByUserIdOptions = Marshal.PtrToStructure<CopyUserTokenByUserIdOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_RTCAdmin_Kick(IntPtr handle, IntPtr options, IntPtr clientData, RTCAdmin.OnKickCompleteCallback completionDelegate)
		{
			var _KickOptions = Marshal.PtrToStructure<KickOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_RTCAdmin_QueryJoinRoomToken(IntPtr handle, IntPtr options, IntPtr clientData, RTCAdmin.OnQueryJoinRoomTokenCompleteCallback completionDelegate)
		{
			var _QueryJoinRoomTokenOptions = Marshal.PtrToStructure<QueryJoinRoomTokenOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_RTCAdmin_SetParticipantHardMute(IntPtr handle, IntPtr options, IntPtr clientData, RTCAdmin.OnSetParticipantHardMuteCompleteCallback completionDelegate)
		{
			var _SetParticipantHardMuteOptions = Marshal.PtrToStructure<SetParticipantHardMuteOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_RTCAdmin_UserToken_Release(IntPtr userToken)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static ulong EOS_RTCAudio_AddNotifyAudioBeforeRender(IntPtr handle, IntPtr options, IntPtr clientData, RTCAudio.OnAudioBeforeRenderCallback completionDelegate)
		{
			var _AddNotifyAudioBeforeRenderOptions = Marshal.PtrToStructure<AddNotifyAudioBeforeRenderOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static ulong EOS_RTCAudio_AddNotifyAudioBeforeSend(IntPtr handle, IntPtr options, IntPtr clientData, RTCAudio.OnAudioBeforeSendCallback completionDelegate)
		{
			var _AddNotifyAudioBeforeSendOptions = Marshal.PtrToStructure<AddNotifyAudioBeforeSendOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static ulong EOS_RTCAudio_AddNotifyAudioDevicesChanged(IntPtr handle, IntPtr options, IntPtr clientData, RTCAudio.OnAudioDevicesChangedCallback completionDelegate)
		{
			var _AddNotifyAudioDevicesChangedOptions = Marshal.PtrToStructure<AddNotifyAudioDevicesChangedOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static ulong EOS_RTCAudio_AddNotifyAudioInputState(IntPtr handle, IntPtr options, IntPtr clientData, RTCAudio.OnAudioInputStateCallback completionDelegate)
		{
			var _AddNotifyAudioInputStateOptions = Marshal.PtrToStructure<AddNotifyAudioInputStateOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static ulong EOS_RTCAudio_AddNotifyAudioOutputState(IntPtr handle, IntPtr options, IntPtr clientData, RTCAudio.OnAudioOutputStateCallback completionDelegate)
		{
			var _AddNotifyAudioOutputStateOptions = Marshal.PtrToStructure<AddNotifyAudioOutputStateOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static ulong EOS_RTCAudio_AddNotifyParticipantUpdated(IntPtr handle, IntPtr options, IntPtr clientData, RTCAudio.OnParticipantUpdatedCallback completionDelegate)
		{
			var _AddNotifyParticipantUpdatedOptions = Marshal.PtrToStructure<AddNotifyParticipantUpdatedOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_RTCAudio_CopyInputDeviceInformationByIndex(IntPtr handle, IntPtr options, IntPtr outInputDeviceInformation)
		{
			var _CopyInputDeviceInformationByIndexOptions = Marshal.PtrToStructure<CopyInputDeviceInformationByIndexOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_RTCAudio_CopyOutputDeviceInformationByIndex(IntPtr handle, IntPtr options, IntPtr outOutputDeviceInformation)
		{
			var _CopyOutputDeviceInformationByIndexOptions = Marshal.PtrToStructure<CopyOutputDeviceInformationByIndexOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static IntPtr EOS_RTCAudio_GetAudioInputDeviceByIndex(IntPtr handle, IntPtr options)
		{
			var _GetAudioInputDeviceByIndexOptions = Marshal.PtrToStructure<GetAudioInputDeviceByIndexOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static uint EOS_RTCAudio_GetAudioInputDevicesCount(IntPtr handle, IntPtr options)
		{
			var _GetAudioInputDevicesCountOptions = Marshal.PtrToStructure<GetAudioInputDevicesCountOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static IntPtr EOS_RTCAudio_GetAudioOutputDeviceByIndex(IntPtr handle, IntPtr options)
		{
			var _GetAudioOutputDeviceByIndexOptions = Marshal.PtrToStructure<GetAudioOutputDeviceByIndexOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static uint EOS_RTCAudio_GetAudioOutputDevicesCount(IntPtr handle, IntPtr options)
		{
			var _GetAudioOutputDevicesCountOptions = Marshal.PtrToStructure<GetAudioOutputDevicesCountOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static uint EOS_RTCAudio_GetInputDevicesCount(IntPtr handle, IntPtr options)
		{
			var _GetInputDevicesCountOptions = Marshal.PtrToStructure<GetInputDevicesCountOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static uint EOS_RTCAudio_GetOutputDevicesCount(IntPtr handle, IntPtr options)
		{
			var _GetOutputDevicesCountOptions = Marshal.PtrToStructure<GetOutputDevicesCountOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_RTCAudio_InputDeviceInformation_Release(IntPtr deviceInformation)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_RTCAudio_OutputDeviceInformation_Release(IntPtr deviceInformation)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_RTCAudio_QueryInputDevicesInformation(IntPtr handle, IntPtr options, IntPtr clientData, RTCAudio.OnQueryInputDevicesInformationCallback completionDelegate)
		{
			var _QueryInputDevicesInformationOptions = Marshal.PtrToStructure<QueryInputDevicesInformationOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_RTCAudio_QueryOutputDevicesInformation(IntPtr handle, IntPtr options, IntPtr clientData, RTCAudio.OnQueryOutputDevicesInformationCallback completionDelegate)
		{
			var _QueryOutputDevicesInformationOptions = Marshal.PtrToStructure<QueryOutputDevicesInformationOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_RTCAudio_RegisterPlatformAudioUser(IntPtr handle, IntPtr options)
		{
			var _RegisterPlatformAudioUserOptions = Marshal.PtrToStructure<RegisterPlatformAudioUserOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_RTCAudio_RegisterPlatformUser(IntPtr handle, IntPtr options, IntPtr clientData, RTCAudio.OnRegisterPlatformUserCallback completionDelegate)
		{
			var _RegisterPlatformUserOptions = Marshal.PtrToStructure<RegisterPlatformUserOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_RTCAudio_RemoveNotifyAudioBeforeRender(IntPtr handle, ulong notificationId)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_RTCAudio_RemoveNotifyAudioBeforeSend(IntPtr handle, ulong notificationId)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_RTCAudio_RemoveNotifyAudioDevicesChanged(IntPtr handle, ulong notificationId)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_RTCAudio_RemoveNotifyAudioInputState(IntPtr handle, ulong notificationId)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_RTCAudio_RemoveNotifyAudioOutputState(IntPtr handle, ulong notificationId)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_RTCAudio_RemoveNotifyParticipantUpdated(IntPtr handle, ulong notificationId)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_RTCAudio_SendAudio(IntPtr handle, IntPtr options)
		{
			var _SendAudioOptions = Marshal.PtrToStructure<SendAudioOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_RTCAudio_SetAudioInputSettings(IntPtr handle, IntPtr options)
		{
			var _SetAudioInputSettingsOptions = Marshal.PtrToStructure<SetAudioInputSettingsOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_RTCAudio_SetAudioOutputSettings(IntPtr handle, IntPtr options)
		{
			var _SetAudioOutputSettingsOptions = Marshal.PtrToStructure<SetAudioOutputSettingsOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_RTCAudio_SetInputDeviceSettings(IntPtr handle, IntPtr options, IntPtr clientData, RTCAudio.OnSetInputDeviceSettingsCallback completionDelegate)
		{
			var _SetInputDeviceSettingsOptions = Marshal.PtrToStructure<SetInputDeviceSettingsOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_RTCAudio_SetOutputDeviceSettings(IntPtr handle, IntPtr options, IntPtr clientData, RTCAudio.OnSetOutputDeviceSettingsCallback completionDelegate)
		{
			var _SetOutputDeviceSettingsOptions = Marshal.PtrToStructure<SetOutputDeviceSettingsOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_RTCAudio_UnregisterPlatformAudioUser(IntPtr handle, IntPtr options)
		{
			var _UnregisterPlatformAudioUserOptions = Marshal.PtrToStructure<UnregisterPlatformAudioUserOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_RTCAudio_UnregisterPlatformUser(IntPtr handle, IntPtr options, IntPtr clientData, RTCAudio.OnUnregisterPlatformUserCallback completionDelegate)
		{
			var _UnregisterPlatformUserOptions = Marshal.PtrToStructure<UnregisterPlatformUserOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_RTCAudio_UpdateParticipantVolume(IntPtr handle, IntPtr options, IntPtr clientData, RTCAudio.OnUpdateParticipantVolumeCallback completionDelegate)
		{
			var _UpdateParticipantVolumeOptions = Marshal.PtrToStructure<UpdateParticipantVolumeOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_RTCAudio_UpdateReceiving(IntPtr handle, IntPtr options, IntPtr clientData, RTCAudio.OnUpdateReceivingCallback completionDelegate)
		{
			var _UpdateReceivingOptions = Marshal.PtrToStructure<UpdateReceivingOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_RTCAudio_UpdateReceivingVolume(IntPtr handle, IntPtr options, IntPtr clientData, RTCAudio.OnUpdateReceivingVolumeCallback completionDelegate)
		{
			var _UpdateReceivingVolumeOptions = Marshal.PtrToStructure<UpdateReceivingVolumeOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_RTCAudio_UpdateSending(IntPtr handle, IntPtr options, IntPtr clientData, RTCAudio.OnUpdateSendingCallback completionDelegate)
		{
			var _UpdateSendingOptions = Marshal.PtrToStructure<UpdateSendingOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_RTCAudio_UpdateSendingVolume(IntPtr handle, IntPtr options, IntPtr clientData, RTCAudio.OnUpdateSendingVolumeCallback completionDelegate)
		{
			var _UpdateSendingVolumeOptions = Marshal.PtrToStructure<UpdateSendingVolumeOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static ulong EOS_RTC_AddNotifyDisconnected(IntPtr handle, IntPtr options, IntPtr clientData, RTC.OnDisconnectedCallback completionDelegate)
		{
			var _AddNotifyDisconnectedOptions = Marshal.PtrToStructure<AddNotifyDisconnectedOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static ulong EOS_RTC_AddNotifyParticipantStatusChanged(IntPtr handle, IntPtr options, IntPtr clientData, RTC.OnParticipantStatusChangedCallback completionDelegate)
		{
			var _AddNotifyParticipantStatusChangedOptions = Marshal.PtrToStructure<AddNotifyParticipantStatusChangedOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static ulong EOS_RTC_AddNotifyRoomStatisticsUpdated(IntPtr handle, IntPtr options, IntPtr clientData, RTC.OnRoomStatisticsUpdatedCallback statisticsUpdateHandler)
		{
			var _AddNotifyRoomStatisticsUpdatedOptions = Marshal.PtrToStructure<AddNotifyRoomStatisticsUpdatedOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_RTC_BlockParticipant(IntPtr handle, IntPtr options, IntPtr clientData, RTC.OnBlockParticipantCallback completionDelegate)
		{
			var _BlockParticipantOptions = Marshal.PtrToStructure<BlockParticipantOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static IntPtr EOS_RTC_GetAudioInterface(IntPtr handle)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_RTC_JoinRoom(IntPtr handle, IntPtr options, IntPtr clientData, RTC.OnJoinRoomCallback completionDelegate)
		{
			var _JoinRoomOptions = Marshal.PtrToStructure<JoinRoomOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_RTC_LeaveRoom(IntPtr handle, IntPtr options, IntPtr clientData, RTC.OnLeaveRoomCallback completionDelegate)
		{
			var _LeaveRoomOptions = Marshal.PtrToStructure<LeaveRoomOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_RTC_RemoveNotifyDisconnected(IntPtr handle, ulong notificationId)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_RTC_RemoveNotifyParticipantStatusChanged(IntPtr handle, ulong notificationId)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_RTC_RemoveNotifyRoomStatisticsUpdated(IntPtr handle, ulong notificationId)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_RTC_SetRoomSetting(IntPtr handle, IntPtr options)
		{
			var _SetRoomSettingOptions = Marshal.PtrToStructure<SetRoomSettingOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_RTC_SetSetting(IntPtr handle, IntPtr options)
		{
			var _SetSettingOptions = Marshal.PtrToStructure<SetSettingOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Reports_SendPlayerBehaviorReport(IntPtr handle, IntPtr options, IntPtr clientData, Reports.OnSendPlayerBehaviorReportCompleteCallback completionDelegate)
		{
			var _SendPlayerBehaviorReportOptions = Marshal.PtrToStructure<SendPlayerBehaviorReportOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_Sanctions_CopyPlayerSanctionByIndex(IntPtr handle, IntPtr options, IntPtr outSanction)
		{
			var _CopyPlayerSanctionByIndexOptions = Marshal.PtrToStructure<CopyPlayerSanctionByIndexOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static uint EOS_Sanctions_GetPlayerSanctionCount(IntPtr handle, IntPtr options)
		{
			var _GetPlayerSanctionCountOptions = Marshal.PtrToStructure<GetPlayerSanctionCountOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Sanctions_PlayerSanction_Release(IntPtr sanction)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Sanctions_QueryActivePlayerSanctions(IntPtr handle, IntPtr options, IntPtr clientData, Sanctions.OnQueryActivePlayerSanctionsCallback completionDelegate)
		{
			var _QueryActivePlayerSanctionsOptions = Marshal.PtrToStructure<QueryActivePlayerSanctionsOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_SessionDetails_Attribute_Release(IntPtr sessionAttribute)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_SessionDetails_CopyInfo(IntPtr handle, IntPtr options, IntPtr outSessionInfo)
		{
			var _SessionDetailsCopyInfoOptions = Marshal.PtrToStructure<SessionDetailsCopyInfoOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_SessionDetails_CopySessionAttributeByIndex(IntPtr handle, IntPtr options, IntPtr outSessionAttribute)
		{
			var _SessionDetailsCopySessionAttributeByIndexOptions = Marshal.PtrToStructure<SessionDetailsCopySessionAttributeByIndexOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_SessionDetails_CopySessionAttributeByKey(IntPtr handle, IntPtr options, IntPtr outSessionAttribute)
		{
			var _SessionDetailsCopySessionAttributeByKeyOptions = Marshal.PtrToStructure<SessionDetailsCopySessionAttributeByKeyOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static uint EOS_SessionDetails_GetSessionAttributeCount(IntPtr handle, IntPtr options)
		{
			var _SessionDetailsGetSessionAttributeCountOptions = Marshal.PtrToStructure<SessionDetailsGetSessionAttributeCountOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_SessionDetails_Info_Release(IntPtr sessionInfo)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_SessionDetails_Release(IntPtr sessionHandle)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_SessionModification_AddAttribute(IntPtr handle, IntPtr options)
		{
			var _SessionModificationAddAttributeOptions = Marshal.PtrToStructure<SessionModificationAddAttributeOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_SessionModification_Release(IntPtr sessionModificationHandle)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_SessionModification_RemoveAttribute(IntPtr handle, IntPtr options)
		{
			var _SessionModificationRemoveAttributeOptions = Marshal.PtrToStructure<SessionModificationRemoveAttributeOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_SessionModification_SetAllowedPlatformIds(IntPtr handle, IntPtr options)
		{
			var _SessionModificationSetAllowedPlatformIdsOptions = Marshal.PtrToStructure<SessionModificationSetAllowedPlatformIdsOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_SessionModification_SetBucketId(IntPtr handle, IntPtr options)
		{
			var _SessionModificationSetBucketIdOptions = Marshal.PtrToStructure<SessionModificationSetBucketIdOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_SessionModification_SetHostAddress(IntPtr handle, IntPtr options)
		{
			var _SessionModificationSetHostAddressOptions = Marshal.PtrToStructure<SessionModificationSetHostAddressOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_SessionModification_SetInvitesAllowed(IntPtr handle, IntPtr options)
		{
			var _SessionModificationSetInvitesAllowedOptions = Marshal.PtrToStructure<SessionModificationSetInvitesAllowedOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_SessionModification_SetJoinInProgressAllowed(IntPtr handle, IntPtr options)
		{
			var _SessionModificationSetJoinInProgressAllowedOptions = Marshal.PtrToStructure<SessionModificationSetJoinInProgressAllowedOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_SessionModification_SetMaxPlayers(IntPtr handle, IntPtr options)
		{
			var _SessionModificationSetMaxPlayersOptions = Marshal.PtrToStructure<SessionModificationSetMaxPlayersOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_SessionModification_SetPermissionLevel(IntPtr handle, IntPtr options)
		{
			var _SessionModificationSetPermissionLevelOptions = Marshal.PtrToStructure<SessionModificationSetPermissionLevelOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_SessionSearch_CopySearchResultByIndex(IntPtr handle, IntPtr options, IntPtr outSessionHandle)
		{
			var _SessionSearchCopySearchResultByIndexOptions = Marshal.PtrToStructure<SessionSearchCopySearchResultByIndexOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_SessionSearch_Find(IntPtr handle, IntPtr options, IntPtr clientData, Sessions.SessionSearchOnFindCallback completionDelegate)
		{
			var _SessionSearchFindOptions = Marshal.PtrToStructure<SessionSearchFindOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static uint EOS_SessionSearch_GetSearchResultCount(IntPtr handle, IntPtr options)
		{
			var _SessionSearchGetSearchResultCountOptions = Marshal.PtrToStructure<SessionSearchGetSearchResultCountOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_SessionSearch_Release(IntPtr sessionSearchHandle)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_SessionSearch_RemoveParameter(IntPtr handle, IntPtr options)
		{
			var _SessionSearchRemoveParameterOptions = Marshal.PtrToStructure<SessionSearchRemoveParameterOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_SessionSearch_SetMaxResults(IntPtr handle, IntPtr options)
		{
			var _SessionSearchSetMaxResultsOptions = Marshal.PtrToStructure<SessionSearchSetMaxResultsOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_SessionSearch_SetParameter(IntPtr handle, IntPtr options)
		{
			var _SessionSearchSetParameterOptions = Marshal.PtrToStructure<SessionSearchSetParameterOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_SessionSearch_SetSessionId(IntPtr handle, IntPtr options)
		{
			var _SessionSearchSetSessionIdOptions = Marshal.PtrToStructure<SessionSearchSetSessionIdOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_SessionSearch_SetTargetUserId(IntPtr handle, IntPtr options)
		{
			var _SessionSearchSetTargetUserIdOptions = Marshal.PtrToStructure<SessionSearchSetTargetUserIdOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static ulong EOS_Sessions_AddNotifyJoinSessionAccepted(IntPtr handle, IntPtr options, IntPtr clientData, Sessions.OnJoinSessionAcceptedCallback notificationFn)
		{
			var _AddNotifyJoinSessionAcceptedOptions = Marshal.PtrToStructure<AddNotifyJoinSessionAcceptedOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static ulong EOS_Sessions_AddNotifyLeaveSessionRequested(IntPtr handle, IntPtr options, IntPtr clientData, Sessions.OnLeaveSessionRequestedCallback notificationFn)
		{
			var _AddNotifyLeaveSessionRequestedOptions = Marshal.PtrToStructure<AddNotifyLeaveSessionRequestedOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static ulong EOS_Sessions_AddNotifySendSessionNativeInviteRequested(IntPtr handle, IntPtr options, IntPtr clientData, Sessions.OnSendSessionNativeInviteRequestedCallback notificationFn)
		{
			var _AddNotifySendSessionNativeInviteRequestedOptions = Marshal.PtrToStructure<AddNotifySendSessionNativeInviteRequestedOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static ulong EOS_Sessions_AddNotifySessionInviteAccepted(IntPtr handle, IntPtr options, IntPtr clientData, Sessions.OnSessionInviteAcceptedCallback notificationFn)
		{
			var _AddNotifySessionInviteAcceptedOptions = Marshal.PtrToStructure<AddNotifySessionInviteAcceptedOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static ulong EOS_Sessions_AddNotifySessionInviteReceived(IntPtr handle, IntPtr options, IntPtr clientData, Sessions.OnSessionInviteReceivedCallback notificationFn)
		{
			var _AddNotifySessionInviteReceivedOptions = Marshal.PtrToStructure<AddNotifySessionInviteReceivedOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static ulong EOS_Sessions_AddNotifySessionInviteRejected(IntPtr handle, IntPtr options, IntPtr clientData, Sessions.OnSessionInviteRejectedCallback notificationFn)
		{
			var _AddNotifySessionInviteRejectedOptions = Marshal.PtrToStructure<AddNotifySessionInviteRejectedOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_Sessions_CopyActiveSessionHandle(IntPtr handle, IntPtr options, IntPtr outSessionHandle)
		{
			var _CopyActiveSessionHandleOptions = Marshal.PtrToStructure<CopyActiveSessionHandleOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_Sessions_CopySessionHandleByInviteId(IntPtr handle, IntPtr options, IntPtr outSessionHandle)
		{
			var _CopySessionHandleByInviteIdOptions = Marshal.PtrToStructure<CopySessionHandleByInviteIdOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_Sessions_CopySessionHandleByUiEventId(IntPtr handle, IntPtr options, IntPtr outSessionHandle)
		{
			var _CopySessionHandleByUiEventIdOptions = Marshal.PtrToStructure<CopySessionHandleByUiEventIdOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_Sessions_CopySessionHandleForPresence(IntPtr handle, IntPtr options, IntPtr outSessionHandle)
		{
			var _CopySessionHandleForPresenceOptions = Marshal.PtrToStructure<CopySessionHandleForPresenceOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_Sessions_CreateSessionModification(IntPtr handle, IntPtr options, IntPtr outSessionModificationHandle)
		{
			var _CreateSessionModificationOptions = Marshal.PtrToStructure<CreateSessionModificationOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_Sessions_CreateSessionSearch(IntPtr handle, IntPtr options, IntPtr outSessionSearchHandle)
		{
			var _CreateSessionSearchOptions = Marshal.PtrToStructure<CreateSessionSearchOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Sessions_DestroySession(IntPtr handle, IntPtr options, IntPtr clientData, Sessions.OnDestroySessionCallback completionDelegate)
		{
			var _DestroySessionOptions = Marshal.PtrToStructure<DestroySessionOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_Sessions_DumpSessionState(IntPtr handle, IntPtr options)
		{
			var _DumpSessionStateOptions = Marshal.PtrToStructure<DumpSessionStateOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Sessions_EndSession(IntPtr handle, IntPtr options, IntPtr clientData, Sessions.OnEndSessionCallback completionDelegate)
		{
			var _EndSessionOptions = Marshal.PtrToStructure<EndSessionOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static uint EOS_Sessions_GetInviteCount(IntPtr handle, IntPtr options)
		{
			var _GetInviteCountOptions = Marshal.PtrToStructure<GetInviteCountOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_Sessions_GetInviteIdByIndex(IntPtr handle, IntPtr options, IntPtr outBuffer, [Out] int inOutBufferLength)
		{
			var _GetInviteIdByIndexOptions = Marshal.PtrToStructure<GetInviteIdByIndexOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_Sessions_IsUserInSession(IntPtr handle, IntPtr options)
		{
			var _IsUserInSessionOptions = Marshal.PtrToStructure<IsUserInSessionOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Sessions_JoinSession(IntPtr handle, IntPtr options, IntPtr clientData, Sessions.OnJoinSessionCallback completionDelegate)
		{
			var _JoinSessionOptions = Marshal.PtrToStructure<JoinSessionOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Sessions_QueryInvites(IntPtr handle, IntPtr options, IntPtr clientData, Sessions.OnQueryInvitesCallback completionDelegate)
		{
			var _QueryInvitesOptions = Marshal.PtrToStructure<QueryInvitesOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Sessions_RegisterPlayers(IntPtr handle, IntPtr options, IntPtr clientData, Sessions.OnRegisterPlayersCallback completionDelegate)
		{
			var _RegisterPlayersOptions = Marshal.PtrToStructure<RegisterPlayersOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Sessions_RejectInvite(IntPtr handle, IntPtr options, IntPtr clientData, Sessions.OnRejectInviteCallback completionDelegate)
		{
			var _RejectInviteOptions = Marshal.PtrToStructure<RejectInviteOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Sessions_RemoveNotifyJoinSessionAccepted(IntPtr handle, ulong inId)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Sessions_RemoveNotifyLeaveSessionRequested(IntPtr handle, ulong inId)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Sessions_RemoveNotifySendSessionNativeInviteRequested(IntPtr handle, ulong inId)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Sessions_RemoveNotifySessionInviteAccepted(IntPtr handle, ulong inId)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Sessions_RemoveNotifySessionInviteReceived(IntPtr handle, ulong inId)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Sessions_RemoveNotifySessionInviteRejected(IntPtr handle, ulong inId)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Sessions_SendInvite(IntPtr handle, IntPtr options, IntPtr clientData, Sessions.OnSendInviteCallback completionDelegate)
		{
			var _SendInviteOptions = Marshal.PtrToStructure<SendInviteOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Sessions_StartSession(IntPtr handle, IntPtr options, IntPtr clientData, Sessions.OnStartSessionCallback completionDelegate)
		{
			var _StartSessionOptions = Marshal.PtrToStructure<StartSessionOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Sessions_UnregisterPlayers(IntPtr handle, IntPtr options, IntPtr clientData, Sessions.OnUnregisterPlayersCallback completionDelegate)
		{
			var _UnregisterPlayersOptions = Marshal.PtrToStructure<UnregisterPlayersOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Sessions_UpdateSession(IntPtr handle, IntPtr options, IntPtr clientData, Sessions.OnUpdateSessionCallback completionDelegate)
		{
			var _UpdateSessionOptions = Marshal.PtrToStructure<UpdateSessionOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_Sessions_UpdateSessionModification(IntPtr handle, IntPtr options, IntPtr outSessionModificationHandle)
		{
			var _UpdateSessionModificationOptions = Marshal.PtrToStructure<UpdateSessionModificationOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_Shutdown()
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_Stats_CopyStatByIndex(IntPtr handle, IntPtr options, IntPtr outStat)
		{
			var _CopyStatByIndexOptions = Marshal.PtrToStructure<CopyStatByIndexOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_Stats_CopyStatByName(IntPtr handle, IntPtr options, IntPtr outStat)
		{
			var _CopyStatByNameOptions = Marshal.PtrToStructure<CopyStatByNameOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static uint EOS_Stats_GetStatsCount(IntPtr handle, IntPtr options)
		{
			var _GetStatCountOptions = Marshal.PtrToStructure<GetStatCountOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Stats_IngestStat(IntPtr handle, IntPtr options, IntPtr clientData, Stats.OnIngestStatCompleteCallback completionDelegate)
		{
			var _IngestStatOptions = Marshal.PtrToStructure<IngestStatOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Stats_QueryStats(IntPtr handle, IntPtr options, IntPtr clientData, Stats.OnQueryStatsCompleteCallback completionDelegate)
		{
			var _QueryStatsOptions = Marshal.PtrToStructure<QueryStatsOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_Stats_Stat_Release(IntPtr stat)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_TitleStorageFileTransferRequest_CancelRequest(IntPtr handle)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_TitleStorageFileTransferRequest_GetFileRequestState(IntPtr handle)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_TitleStorageFileTransferRequest_GetFilename(IntPtr handle, uint filenameStringBufferSizeBytes, IntPtr outStringBuffer, [Out] int outStringLength)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_TitleStorageFileTransferRequest_Release(IntPtr titleStorageFileTransferHandle)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_TitleStorage_CopyFileMetadataAtIndex(IntPtr handle, IntPtr options, IntPtr outMetadata)
		{
			var _CopyFileMetadataAtIndexOptions = Marshal.PtrToStructure<CopyFileMetadataAtIndexOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_TitleStorage_CopyFileMetadataByFilename(IntPtr handle, IntPtr options, IntPtr outMetadata)
		{
			var _CopyFileMetadataByFilenameOptions = Marshal.PtrToStructure<CopyFileMetadataByFilenameOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_TitleStorage_DeleteCache(IntPtr handle, IntPtr options, IntPtr clientData, TitleStorage.OnDeleteCacheCompleteCallback completionCallback)
		{
			var _DeleteCacheOptions = Marshal.PtrToStructure<DeleteCacheOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_TitleStorage_FileMetadata_Release(IntPtr fileMetadata)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static uint EOS_TitleStorage_GetFileMetadataCount(IntPtr handle, IntPtr options)
		{
			var _GetFileMetadataCountOptions = Marshal.PtrToStructure<GetFileMetadataCountOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_TitleStorage_QueryFile(IntPtr handle, IntPtr options, IntPtr clientData, TitleStorage.OnQueryFileCompleteCallback completionCallback)
		{
			var _QueryFileOptions = Marshal.PtrToStructure<QueryFileOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_TitleStorage_QueryFileList(IntPtr handle, IntPtr options, IntPtr clientData, TitleStorage.OnQueryFileListCompleteCallback completionCallback)
		{
			var _QueryFileListOptions = Marshal.PtrToStructure<QueryFileListOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static IntPtr EOS_TitleStorage_ReadFile(IntPtr handle, IntPtr options, IntPtr clientData, TitleStorage.OnReadFileCompleteCallback completionCallback)
		{
			var _ReadFileOptions = Marshal.PtrToStructure<ReadFileOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_UI_AcknowledgeEventId(IntPtr handle, IntPtr options)
		{
			var _AcknowledgeEventIdOptions = Marshal.PtrToStructure<AcknowledgeEventIdOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static ulong EOS_UI_AddNotifyDisplaySettingsUpdated(IntPtr handle, IntPtr options, IntPtr clientData, UI.OnDisplaySettingsUpdatedCallback notificationFn)
		{
			var _AddNotifyDisplaySettingsUpdatedOptions = Marshal.PtrToStructure<AddNotifyDisplaySettingsUpdatedOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static ulong EOS_UI_AddNotifyMemoryMonitor(IntPtr handle, IntPtr options, IntPtr clientData, UI.OnMemoryMonitorCallback notificationFn)
		{
			var _AddNotifyMemoryMonitorOptions = Marshal.PtrToStructure<AddNotifyMemoryMonitorOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static int EOS_UI_GetFriendsExclusiveInput(IntPtr handle, IntPtr options)
		{
			var _GetFriendsExclusiveInputOptions = Marshal.PtrToStructure<GetFriendsExclusiveInputOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static int EOS_UI_GetFriendsVisible(IntPtr handle, IntPtr options)
		{
			var _GetFriendsVisibleOptions = Marshal.PtrToStructure<GetFriendsVisibleOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static UI.NotificationLocation EOS_UI_GetNotificationLocationPreference(IntPtr handle)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static UI.InputStateButtonFlags EOS_UI_GetToggleFriendsButton(IntPtr handle, IntPtr options)
		{
			var _GetToggleFriendsButtonOptions = Marshal.PtrToStructure<GetToggleFriendsButtonOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static UI.KeyCombination EOS_UI_GetToggleFriendsKey(IntPtr handle, IntPtr options)
		{
			var _GetToggleFriendsKeyOptions = Marshal.PtrToStructure<GetToggleFriendsKeyOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_UI_HideFriends(IntPtr handle, IntPtr options, IntPtr clientData, UI.OnHideFriendsCallback completionDelegate)
		{
			var _HideFriendsOptions = Marshal.PtrToStructure<HideFriendsOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static int EOS_UI_IsSocialOverlayPaused(IntPtr handle, IntPtr options)
		{
			var _IsSocialOverlayPausedOptions = Marshal.PtrToStructure<IsSocialOverlayPausedOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static int EOS_UI_IsValidButtonCombination(IntPtr handle, UI.InputStateButtonFlags buttonCombination)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static int EOS_UI_IsValidKeyCombination(IntPtr handle, UI.KeyCombination keyCombination)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_UI_PauseSocialOverlay(IntPtr handle, IntPtr options)
		{
			var _PauseSocialOverlayOptions = Marshal.PtrToStructure<PauseSocialOverlayOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_UI_PrePresent(IntPtr handle, IntPtr options)
		{
			var _PrePresentOptions = Marshal.PtrToStructure<PrePresentOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_UI_RemoveNotifyDisplaySettingsUpdated(IntPtr handle, ulong id)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_UI_RemoveNotifyMemoryMonitor(IntPtr handle, ulong id)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_UI_ReportInputState(IntPtr handle, IntPtr options)
		{
			var _ReportInputStateOptions = Marshal.PtrToStructure<ReportInputStateOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_UI_SetDisplayPreference(IntPtr handle, IntPtr options)
		{
			var _SetDisplayPreferenceOptions = Marshal.PtrToStructure<SetDisplayPreferenceOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_UI_SetToggleFriendsButton(IntPtr handle, IntPtr options)
		{
			var _SetToggleFriendsButtonOptions = Marshal.PtrToStructure<SetToggleFriendsButtonOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_UI_SetToggleFriendsKey(IntPtr handle, IntPtr options)
		{
			var _SetToggleFriendsKeyOptions = Marshal.PtrToStructure<SetToggleFriendsKeyOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_UI_ShowBlockPlayer(IntPtr handle, IntPtr options, IntPtr clientData, UI.OnShowBlockPlayerCallback completionDelegate)
		{
			var _ShowBlockPlayerOptions = Marshal.PtrToStructure<ShowBlockPlayerOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_UI_ShowFriends(IntPtr handle, IntPtr options, IntPtr clientData, UI.OnShowFriendsCallback completionDelegate)
		{
			var _ShowFriendsOptions = Marshal.PtrToStructure<ShowFriendsOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_UI_ShowNativeProfile(IntPtr handle, IntPtr options, IntPtr clientData, UI.OnShowNativeProfileCallback completionDelegate)
		{
			var _ShowNativeProfileOptions = Marshal.PtrToStructure<ShowNativeProfileOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_UI_ShowReportPlayer(IntPtr handle, IntPtr options, IntPtr clientData, UI.OnShowReportPlayerCallback completionDelegate)
		{
			var _ShowReportPlayerOptions = Marshal.PtrToStructure<ShowReportPlayerOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_UserInfo_BestDisplayName_Release(IntPtr bestDisplayName)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_UserInfo_CopyBestDisplayName(IntPtr handle, IntPtr options, IntPtr outBestDisplayName)
		{
			var _CopyBestDisplayNameOptions = Marshal.PtrToStructure<CopyBestDisplayNameOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_UserInfo_CopyBestDisplayNameWithPlatform(IntPtr handle, IntPtr options, IntPtr outBestDisplayName)
		{
			var _CopyBestDisplayNameWithPlatformOptions = Marshal.PtrToStructure<CopyBestDisplayNameWithPlatformOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_UserInfo_CopyExternalUserInfoByAccountId(IntPtr handle, IntPtr options, IntPtr outExternalUserInfo)
		{
			var _CopyExternalUserInfoByAccountIdOptions = Marshal.PtrToStructure<CopyExternalUserInfoByAccountIdOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_UserInfo_CopyExternalUserInfoByAccountType(IntPtr handle, IntPtr options, IntPtr outExternalUserInfo)
		{
			var _CopyExternalUserInfoByAccountTypeOptions = Marshal.PtrToStructure<CopyExternalUserInfoByAccountTypeOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_UserInfo_CopyExternalUserInfoByIndex(IntPtr handle, IntPtr options, IntPtr outExternalUserInfo)
		{
			var _CopyExternalUserInfoByIndexOptions = Marshal.PtrToStructure<CopyExternalUserInfoByIndexOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static Result EOS_UserInfo_CopyUserInfo(IntPtr handle, IntPtr options, IntPtr outUserInfo)
		{
			var _CopyUserInfoOptions = Marshal.PtrToStructure<CopyUserInfoOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_UserInfo_ExternalUserInfo_Release(IntPtr externalUserInfo)
        {
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static uint EOS_UserInfo_GetExternalUserInfoCount(IntPtr handle, IntPtr options)
		{
			var _GetExternalUserInfoCountOptions = Marshal.PtrToStructure<GetExternalUserInfoCountOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static uint EOS_UserInfo_GetLocalPlatformType(IntPtr handle, IntPtr options)
		{
			var _GetLocalPlatformTypeOptions = Marshal.PtrToStructure<GetLocalPlatformTypeOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_UserInfo_QueryUserInfo(IntPtr handle, IntPtr options, IntPtr clientData, UserInfo.OnQueryUserInfoCallback completionDelegate)
		{
			var _QueryUserInfoOptions = Marshal.PtrToStructure<QueryUserInfoOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_UserInfo_QueryUserInfoByDisplayName(IntPtr handle, IntPtr options, IntPtr clientData, UserInfo.OnQueryUserInfoByDisplayNameCallback completionDelegate)
		{
			var _QueryUserInfoByDisplayNameOptions = Marshal.PtrToStructure<QueryUserInfoByDisplayNameOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_UserInfo_QueryUserInfoByExternalAccount(IntPtr handle, IntPtr options, IntPtr clientData, UserInfo.OnQueryUserInfoByExternalAccountCallback completionDelegate)
		{
			var _QueryUserInfoByExternalAccountOptions = Marshal.PtrToStructure<QueryUserInfoByExternalAccountOptions>(options);
        }

        [UnmanagedCallersOnly(CallConvs = new[] { typeof(CallConvCdecl), typeof(CallConvStdcall) })]
        public static void EOS_UserInfo_Release(IntPtr userInfo)
        {
        }

        #endregion
#endif
    }
}
